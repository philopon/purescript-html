(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Alt($less$bar$greater, __superclass_Prelude$dotFunctor_0) {
    this["<|>"] = $less$bar$greater;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
var $less$bar$greater = function (dict) {
    return dict["<|>"];
};
module.exports = {
    "<|>": $less$bar$greater, 
    Alt: Alt
};

},{"Prelude":25}],2:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Lazy = require("Control.Lazy");
var Control_Alt = require("Control.Alt");
function Alternative(__superclass_Control$dotPlus$dotPlus_1, __superclass_Prelude$dotApplicative_0) {
    this["__superclass_Control.Plus.Plus_1"] = __superclass_Control$dotPlus$dotPlus_1;
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
};
var some = function (__dict_Alternative_0) {
    return function (__dict_Lazy1_1) {
        return function (v) {
            return Prelude["<*>"]((__dict_Alternative_0["__superclass_Prelude.Applicative_0"]())["__superclass_Prelude.Apply_0"]())(Prelude["<$>"](((__dict_Alternative_0["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())["__superclass_Prelude.Functor_0"]())(Prelude[":"])(v))(Control_Lazy.defer1(__dict_Lazy1_1)(function (_) {
                return many(__dict_Alternative_0)(__dict_Lazy1_1)(v);
            }));
        };
    };
};
var many = function (__dict_Alternative_2) {
    return function (__dict_Lazy1_3) {
        return function (v) {
            return Control_Alt["<|>"]((__dict_Alternative_2["__superclass_Control.Plus.Plus_1"]())["__superclass_Control.Alt.Alt_0"]())(some(__dict_Alternative_2)(__dict_Lazy1_3)(v))(Prelude.pure(__dict_Alternative_2["__superclass_Prelude.Applicative_0"]())([  ]));
        };
    };
};
module.exports = {
    Alternative: Alternative, 
    many: many, 
    some: some
};

},{"Control.Alt":1,"Control.Lazy":4,"Prelude":25}],3:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Extend($less$less$eq, __superclass_Prelude$dotFunctor_0) {
    this["<<="] = $less$less$eq;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
var $less$less$eq = function (dict) {
    return dict["<<="];
};
var $eq$less$eq = function (__dict_Extend_0) {
    return function (f) {
        return function (g) {
            return function (w) {
                return f($less$less$eq(__dict_Extend_0)(g)(w));
            };
        };
    };
};
var $eq$greater$eq = function (__dict_Extend_1) {
    return function (f) {
        return function (g) {
            return function (w) {
                return g($less$less$eq(__dict_Extend_1)(f)(w));
            };
        };
    };
};
var $eq$greater$greater = function (__dict_Extend_2) {
    return function (w) {
        return function (f) {
            return $less$less$eq(__dict_Extend_2)(f)(w);
        };
    };
};
var extendArr = function (__dict_Semigroup_3) {
    return new Extend(function (f) {
        return function (g) {
            return function (w) {
                return f(function (w$prime) {
                    return g(Prelude["<>"](__dict_Semigroup_3)(w)(w$prime));
                });
            };
        };
    }, function () {
        return Prelude.functorArr;
    });
};
var duplicate = function (__dict_Extend_4) {
    return function (w) {
        return $less$less$eq(__dict_Extend_4)(Prelude.id(Prelude.categoryArr))(w);
    };
};
module.exports = {
    "<<=": $less$less$eq, 
    "=<=": $eq$less$eq, 
    "=>=": $eq$greater$eq, 
    "=>>": $eq$greater$greater, 
    Extend: Extend, 
    duplicate: duplicate, 
    extendArr: extendArr
};

},{"Prelude":25}],4:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Lazy(defer) {
    this.defer = defer;
};
function Lazy1(defer1) {
    this.defer1 = defer1;
};
function Lazy2(defer2) {
    this.defer2 = defer2;
};
var defer2 = function (dict) {
    return dict.defer2;
};
var fix2 = function (__dict_Lazy2_0) {
    return function (f) {
        return defer2(__dict_Lazy2_0)(function (_) {
            return f(fix2(__dict_Lazy2_0)(f));
        });
    };
};
var defer1 = function (dict) {
    return dict.defer1;
};
var fix1 = function (__dict_Lazy1_1) {
    return function (f) {
        return defer1(__dict_Lazy1_1)(function (_) {
            return f(fix1(__dict_Lazy1_1)(f));
        });
    };
};
var defer = function (dict) {
    return dict.defer;
};
var fix = function (__dict_Lazy_2) {
    return function (f) {
        return defer(__dict_Lazy_2)(function (_) {
            return f(fix(__dict_Lazy_2)(f));
        });
    };
};
module.exports = {
    Lazy: Lazy, 
    Lazy1: Lazy1, 
    Lazy2: Lazy2, 
    defer: defer, 
    defer1: defer1, 
    defer2: defer2, 
    fix: fix, 
    fix1: fix1, 
    fix2: fix2
};

},{"Prelude":25}],5:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

  function newRef(val) {
    return function () {
      return { value: val };
    };
  }
;

  function readRef(ref) {
    return function() {
      return ref.value;
    };
  }
;

  function modifyRef$prime(ref) {
    return function(f) {
      return function() {
        var t = f(ref.value);
        ref.value = t.newState;
        return t.retVal;
      };
    };
  }
;

  function writeRef(ref) {
    return function(val) {
      return function() {
        ref.value = val;
        return {};
      };
    };
  }
;
var modifyRef = function (ref) {
    return function (f) {
        return modifyRef$prime(ref)(function (s) {
            return {
                newState: f(s), 
                retVal: Prelude.unit
            };
        });
    };
};
module.exports = {
    modifyRef: modifyRef, 
    "modifyRef'": modifyRef$prime, 
    newRef: newRef, 
    readRef: readRef, 
    writeRef: writeRef
};

},{"Prelude":25}],6:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function returnE(a) {  return function() {    return a;  };};
function bindE(a) {  return function(f) {    return function() {      return f(a())();    };  };};
function runPure(f) {  return f();};
function untilE(f) {  return function() {    while (!f());    return {};  };};
function whileE(f) {  return function(a) {    return function() {      while (f()) {        a();      }      return {};    };  };};
function forE(lo) {  return function(hi) {    return function(f) {      return function() {        for (var i = lo; i < hi; i++) {          f(i)();        }      };    };  };};
function foreachE(as) {  return function(f) {    return function() {      for (var i = 0; i < as.length; i++) {        f(as[i])();      }    };  };};
var monadEff = new Prelude.Monad(function () {
    return applicativeEff;
}, function () {
    return bindEff;
});
var bindEff = new Prelude.Bind(bindE, function () {
    return applyEff;
});
var applyEff = new Prelude.Apply(Prelude.ap(monadEff), function () {
    return functorEff;
});
var applicativeEff = new Prelude.Applicative(function () {
    return applyEff;
}, returnE);
var functorEff = new Prelude.Functor(Prelude.liftA1(applicativeEff));
module.exports = {
    applicativeEff: applicativeEff, 
    applyEff: applyEff, 
    bindE: bindE, 
    bindEff: bindEff, 
    forE: forE, 
    foreachE: foreachE, 
    functorEff: functorEff, 
    monadEff: monadEff, 
    returnE: returnE, 
    runPure: runPure, 
    untilE: untilE, 
    whileE: whileE
};

},{"Prelude":25}],7:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Plus = require("Control.Plus");
function MonadPlus(__superclass_Control$dotAlternative$dotAlternative_1, __superclass_Prelude$dotMonad_0) {
    this["__superclass_Control.Alternative.Alternative_1"] = __superclass_Control$dotAlternative$dotAlternative_1;
    this["__superclass_Prelude.Monad_0"] = __superclass_Prelude$dotMonad_0;
};
var guard = function (__dict_MonadPlus_0) {
    return function (_12) {
        if (_12) {
            return Prelude["return"](__dict_MonadPlus_0["__superclass_Prelude.Monad_0"]())(Prelude.unit);
        };
        if (!_12) {
            return Control_Plus.empty((__dict_MonadPlus_0["__superclass_Control.Alternative.Alternative_1"]())["__superclass_Control.Plus.Plus_1"]());
        };
        throw new Error("Failed pattern match");
    };
};
module.exports = {
    MonadPlus: MonadPlus, 
    guard: guard
};

},{"Control.Plus":8,"Prelude":25}],8:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Plus(__superclass_Control$dotAlt$dotAlt_0, empty) {
    this["__superclass_Control.Alt.Alt_0"] = __superclass_Control$dotAlt$dotAlt_0;
    this.empty = empty;
};
var empty = function (dict) {
    return dict.empty;
};
module.exports = {
    Plus: Plus, 
    empty: empty
};

},{"Prelude":25}],9:[function(require,module,exports){
(function (global){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var globalEnv = typeof window === 'undefined' ? global : window;

  function timeout(time){
    return function(fn){
      return function(){
        return globalEnv.setTimeout(function(){
          fn();
        }, time);
      };
    };
  }
;

  function clearTimeout(timer){
    return function(){
      return globalEnv.clearTimeout(timer);
    };
  }
;

  function interval(time){
    return function(fn){
      return function(){
        return globalEnv.setInterval(function(){
          fn();
        }, time);
      };
    };
  }
;

  function clearInterval(timer){
    return function(){
      return globalEnv.clearInterval(timer);
    };
  }
;
module.exports = {
    clearInterval: clearInterval, 
    clearTimeout: clearTimeout, 
    interval: interval, 
    timeout: timeout
};

}).call(this,typeof global !== "undefined" ? global : typeof self !== "undefined" ? self : typeof window !== "undefined" ? window : {})
},{"Prelude":25}],10:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Char = {
    create: function (value) {
        return value;
    }
};

    function toCharCode(c) {
      return c.charCodeAt(0);
    }
    ;

    function fromCharCode(c) {
      return String.fromCharCode(c);
    }
    ;
var showChar = new Prelude.Show(function (_6) {
    return "Char " + Prelude.show(Prelude.showString)(_6);
});
var eqChar = new Prelude.Eq(function (a) {
    return function (b) {
        return !Prelude["=="](eqChar)(a)(b);
    };
}, function (_2) {
    return function (_3) {
        return _2 === _3;
    };
});
var ordChar = new Prelude.Ord(function () {
    return eqChar;
}, function (_4) {
    return function (_5) {
        return Prelude.compare(Prelude.ordString)(_4)(_5);
    };
});
var charString = function (_1) {
    return _1;
};
module.exports = {
    charString: charString, 
    eqChar: eqChar, 
    fromCharCode: fromCharCode, 
    ordChar: ordChar, 
    showChar: showChar, 
    toCharCode: toCharCode
};

},{"Prelude":25}],11:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function mkFn0(fn) {  return function() {    return fn({});  };};
function mkFn1(fn) {  return function(a) {    return fn(a);  };};
function mkFn2(fn) {  return function(a, b) {    return fn(a)(b);  };};
function mkFn3(fn) {  return function(a, b, c) {    return fn(a)(b)(c);  };};
function mkFn4(fn) {  return function(a, b, c, d) {    return fn(a)(b)(c)(d);  };};
function mkFn5(fn) {  return function(a, b, c, d, e) {    return fn(a)(b)(c)(d)(e);  };};
function mkFn6(fn) {  return function(a, b, c, d, e, f) {    return fn(a)(b)(c)(d)(e)(f);  };};
function mkFn7(fn) {  return function(a, b, c, d, e, f, g) {    return fn(a)(b)(c)(d)(e)(f)(g);  };};
function mkFn8(fn) {  return function(a, b, c, d, e, f, g, h) {    return fn(a)(b)(c)(d)(e)(f)(g)(h);  };};
function mkFn9(fn) {  return function(a, b, c, d, e, f, g, h, i) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i);  };};
function mkFn10(fn) {  return function(a, b, c, d, e, f, g, h, i, j) {    return fn(a)(b)(c)(d)(e)(f)(g)(h)(i)(j);  };};
function runFn0(fn) {  return fn();};
function runFn1(fn) {  return function(a) {    return fn(a);  };};
function runFn2(fn) {  return function(a) {    return function(b) {      return fn(a, b);    };  };};
function runFn3(fn) {  return function(a) {    return function(b) {      return function(c) {        return fn(a, b, c);      };    };  };};
function runFn4(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return fn(a, b, c, d);        };      };    };  };};
function runFn5(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return fn(a, b, c, d, e);          };        };      };    };  };};
function runFn6(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return fn(a, b, c, d, e, f);            };          };        };      };    };  };};
function runFn7(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return fn(a, b, c, d, e, f, g);              };            };          };        };      };    };  };};
function runFn8(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return fn(a, b, c, d, e, f, g, h);                };              };            };          };        };      };    };  };};
function runFn9(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return fn(a, b, c, d, e, f, g, h, i);                  };                };              };            };          };        };      };    };  };};
function runFn10(fn) {  return function(a) {    return function(b) {      return function(c) {        return function(d) {          return function(e) {            return function(f) {              return function(g) {                return function(h) {                  return function(i) {                    return function(j) {                      return fn(a, b, c, d, e, f, g, h, i, j);                    };                  };                };              };            };          };        };      };    };  };};
var on = function (f) {
    return function (g) {
        return function (x) {
            return function (y) {
                return f(g(x))(g(y));
            };
        };
    };
};
module.exports = {
    mkFn0: mkFn0, 
    mkFn1: mkFn1, 
    mkFn10: mkFn10, 
    mkFn2: mkFn2, 
    mkFn3: mkFn3, 
    mkFn4: mkFn4, 
    mkFn5: mkFn5, 
    mkFn6: mkFn6, 
    mkFn7: mkFn7, 
    mkFn8: mkFn8, 
    mkFn9: mkFn9, 
    on: on, 
    runFn0: runFn0, 
    runFn1: runFn1, 
    runFn10: runFn10, 
    runFn2: runFn2, 
    runFn3: runFn3, 
    runFn4: runFn4, 
    runFn5: runFn5, 
    runFn6: runFn6, 
    runFn7: runFn7, 
    runFn8: runFn8, 
    runFn9: runFn9
};

},{"Prelude":25}],12:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Control_Extend = require("Control.Extend");
var Control_Alt = require("Control.Alt");
var Control_Plus = require("Control.Plus");
var Control_Alternative = require("Control.Alternative");
var Control_MonadPlus = require("Control.MonadPlus");
function Nothing() {

};
Nothing.value = new Nothing();
function Just(value0) {
    this.value0 = value0;
};
Just.create = function (value0) {
    return new Just(value0);
};
var showMaybe = function (__dict_Show_0) {
    return new Prelude.Show(function (_28) {
        if (_28 instanceof Just) {
            return "Just (" + (Prelude.show(__dict_Show_0)(_28.value0) + ")");
        };
        if (_28 instanceof Nothing) {
            return "Nothing";
        };
        throw new Error("Failed pattern match");
    });
};
var semigroupMaybe = function (__dict_Semigroup_1) {
    return new Prelude.Semigroup(function (_26) {
        return function (_27) {
            if (_26 instanceof Nothing) {
                return _27;
            };
            if (_27 instanceof Nothing) {
                return _26;
            };
            if (_26 instanceof Just && _27 instanceof Just) {
                return new Just(Prelude["<>"](__dict_Semigroup_1)(_26.value0)(_27.value0));
            };
            throw new Error("Failed pattern match");
        };
    });
};
var maybe = function (_13) {
    return function (_14) {
        return function (_15) {
            if (_15 instanceof Nothing) {
                return _13;
            };
            if (_15 instanceof Just) {
                return _14(_15.value0);
            };
            throw new Error("Failed pattern match");
        };
    };
};
var isNothing = maybe(true)(Prelude["const"](false));
var isJust = maybe(false)(Prelude["const"](true));
var functorMaybe = new Prelude.Functor(function (_16) {
    return function (_17) {
        if (_17 instanceof Just) {
            return new Just(_16(_17.value0));
        };
        return Nothing.value;
    };
});
var fromMaybe = function (a) {
    return maybe(a)(Prelude.id(Prelude.categoryArr));
};
var extendMaybe = new Control_Extend.Extend(function (_24) {
    return function (_25) {
        if (_25 instanceof Nothing) {
            return Nothing.value;
        };
        return Just.create(_24(_25));
    };
}, function () {
    return functorMaybe;
});
var eqMaybe = function (__dict_Eq_3) {
    return new Prelude.Eq(function (a) {
        return function (b) {
            return !Prelude["=="](eqMaybe(__dict_Eq_3))(a)(b);
        };
    }, function (_29) {
        return function (_30) {
            if (_29 instanceof Nothing && _30 instanceof Nothing) {
                return true;
            };
            if (_29 instanceof Just && _30 instanceof Just) {
                return Prelude["=="](__dict_Eq_3)(_29.value0)(_30.value0);
            };
            return false;
        };
    });
};
var ordMaybe = function (__dict_Ord_2) {
    return new Prelude.Ord(function () {
        return eqMaybe(__dict_Ord_2["__superclass_Prelude.Eq_0"]());
    }, function (_31) {
        return function (_32) {
            if (_31 instanceof Just && _32 instanceof Just) {
                return Prelude.compare(__dict_Ord_2)(_31.value0)(_32.value0);
            };
            if (_31 instanceof Nothing && _32 instanceof Nothing) {
                return Prelude.EQ.value;
            };
            if (_31 instanceof Nothing) {
                return Prelude.LT.value;
            };
            if (_32 instanceof Nothing) {
                return Prelude.GT.value;
            };
            throw new Error("Failed pattern match");
        };
    });
};
var applyMaybe = new Prelude.Apply(function (_18) {
    return function (_19) {
        if (_18 instanceof Just) {
            return Prelude["<$>"](functorMaybe)(_18.value0)(_19);
        };
        if (_18 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return functorMaybe;
});
var bindMaybe = new Prelude.Bind(function (_22) {
    return function (_23) {
        if (_22 instanceof Just) {
            return _23(_22.value0);
        };
        if (_22 instanceof Nothing) {
            return Nothing.value;
        };
        throw new Error("Failed pattern match");
    };
}, function () {
    return applyMaybe;
});
var applicativeMaybe = new Prelude.Applicative(function () {
    return applyMaybe;
}, Just.create);
var monadMaybe = new Prelude.Monad(function () {
    return applicativeMaybe;
}, function () {
    return bindMaybe;
});
var altMaybe = new Control_Alt.Alt(function (_20) {
    return function (_21) {
        if (_20 instanceof Nothing) {
            return _21;
        };
        return _20;
    };
}, function () {
    return functorMaybe;
});
var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
}, Nothing.value);
var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return plusMaybe;
}, function () {
    return applicativeMaybe;
});
var monadPlusMaybe = new Control_MonadPlus.MonadPlus(function () {
    return alternativeMaybe;
}, function () {
    return monadMaybe;
});
module.exports = {
    Just: Just, 
    Nothing: Nothing, 
    altMaybe: altMaybe, 
    alternativeMaybe: alternativeMaybe, 
    applicativeMaybe: applicativeMaybe, 
    applyMaybe: applyMaybe, 
    bindMaybe: bindMaybe, 
    eqMaybe: eqMaybe, 
    extendMaybe: extendMaybe, 
    fromMaybe: fromMaybe, 
    functorMaybe: functorMaybe, 
    isJust: isJust, 
    isNothing: isNothing, 
    maybe: maybe, 
    monadMaybe: monadMaybe, 
    monadPlusMaybe: monadPlusMaybe, 
    ordMaybe: ordMaybe, 
    plusMaybe: plusMaybe, 
    semigroupMaybe: semigroupMaybe, 
    showMaybe: showMaybe
};

},{"Control.Alt":1,"Control.Alternative":2,"Control.Extend":3,"Control.MonadPlus":7,"Control.Plus":8,"Prelude":25}],13:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

    function charCodeAt(i) {
      return function(s) {
        return s.charCodeAt(i);
      };
    }
    ;

    function charAt(i) {
      return function(s) {
        return s.charAt(i);
      };
    }
    ;
module.exports = {
    charAt: charAt, 
    charCodeAt: charCodeAt
};

},{"Prelude":25}],14:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Data_Char = require("Data.Char");
var Data_String_Unsafe = require("Data.String.Unsafe");
var Prelude = require("Prelude");
var Data_Maybe = require("Data.Maybe");

    function _charAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charAt(i)) : Nothing;
    }
    ;

    function _charCodeAt(i, s, Just, Nothing) {
      return i >= 0 && i < s.length ? Just(s.charCodeAt(i)) : Nothing;
    }
    ;

    function fromCharArray(a) {
      return a.join('');
    }
    ;

    function indexOf(x) {
      return function(s) {
        return s.indexOf(x);
      };
    }
    ;

    function indexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.indexOf(x, startAt);
        };
      };
    }
    ;

    function lastIndexOf(x) {
      return function(s) {
        return s.lastIndexOf(x);
      };
    }
    ;

    function lastIndexOf$prime(x) {
      return function(startAt) {
        return function(s) {
          return s.lastIndexOf(x, startAt);
        };
      };
    }
    ;

    function length(s) {
      return s.length;
    }
    ;

    function localeCompare(s1) {
      return function(s2) {
        return s1.localeCompare(s2);
      };
    }
    ;

    function replace(s1) {
      return function(s2) {
        return function(s3) {
          return s3.replace(s1, s2);
        };
      };
    }
    ;

    function take(n) {
      return function(s) {
        return s.substr(0, n);
      };
    }
    ;

    function drop(n) {
      return function(s) {
        return s.substr(n);
      };
    }
    ;

    function count(p){      
      return function(s){
        var i;
        for(i = 0; i < s.length && p(s.charAt(i)); i++){};
        return i;
      };      
    }
    ;

    function split(sep) {
      return function(s) {
        return s.split(sep);
      };
    }
    ;

    function toCharArray(s) {
      return s.split('');
    }
    ;

    function toLower(s) {
      return s.toLowerCase();
    }
    ;

    function toUpper(s) {
      return s.toUpperCase();
    }
    ;

    function trim(s) {
      return s.trim();
    }
    ;

    function joinWith(s) {
      return function(xs) {
        return xs.join(s);
      };
    }
    ;
var takeWhile = function (p) {
    return function (s) {
        return take(count(p)(s))(s);
    };
};
var $$null = function (s) {
    return length(s) === 0;
};
var uncons = function (_10) {
    if ($$null(_10)) {
        return Data_Maybe.Nothing.value;
    };
    return new Data_Maybe.Just({
        head: Data_String_Unsafe.charAt(0)(_10), 
        tail: drop(1)(_10)
    });
};
var fromChar = Data_Char.charString;
var singleton = fromChar;
var dropWhile = function (p) {
    return function (s) {
        return drop(count(p)(s))(s);
    };
};
var charCodeAt = function (n) {
    return function (s) {
        return _charCodeAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
var charAt = function (n) {
    return function (s) {
        return _charAt(n, s, Data_Maybe.Just.create, Data_Maybe.Nothing.value);
    };
};
module.exports = {
    charAt: charAt, 
    charCodeAt: charCodeAt, 
    count: count, 
    drop: drop, 
    dropWhile: dropWhile, 
    fromChar: fromChar, 
    fromCharArray: fromCharArray, 
    indexOf: indexOf, 
    "indexOf'": indexOf$prime, 
    joinWith: joinWith, 
    lastIndexOf: lastIndexOf, 
    "lastIndexOf'": lastIndexOf$prime, 
    length: length, 
    localeCompare: localeCompare, 
    "null": $$null, 
    replace: replace, 
    singleton: singleton, 
    split: split, 
    take: take, 
    takeWhile: takeWhile, 
    toCharArray: toCharArray, 
    toLower: toLower, 
    toUpper: toUpper, 
    trim: trim, 
    uncons: uncons
};

},{"Data.Char":10,"Data.Function":11,"Data.Maybe":12,"Data.String.Unsafe":13,"Prelude":25}],15:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function trace(s) {  return function() {    console.log(s);    return {};  };};
var print = function (__dict_Show_0) {
    return function (o) {
        return trace(Prelude.show(__dict_Show_0)(o));
    };
};
module.exports = {
    print: print, 
    trace: trace
};

},{"Prelude":25}],16:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Html_Attributes = require("Html.Attributes");
var Prelude = require("Prelude");
var wrap = Html_Attributes.stringAttribute("wrap");
var width = Html_Attributes.numberAttribute("width");
var value = Html_Attributes.stringAttribute("value");
var usemap = Html_Attributes.stringAttribute("usemap");
var type_ = Html_Attributes.stringAttribute("type");
var title = Html_Attributes.stringAttribute("title");
var target = Html_Attributes.stringAttribute("target");
var tabindex = Html_Attributes.numberAttribute("tabindex");
var step = Html_Attributes.numberAttribute("step");
var start = Html_Attributes.numberAttribute("start");
var srclang = Html_Attributes.stringAttribute("srclang");
var srcdoc = Html_Attributes.stringAttribute("srcdoc");
var src = Html_Attributes.stringAttribute("src");
var spellcheck = Html_Attributes.booleanAttribute("spellcheck");
var size = Html_Attributes.numberAttribute("size");
var shape = Html_Attributes.stringAttribute("shape");
var selected = Html_Attributes.booleanAttribute("selected");
var seamless = Html_Attributes.booleanAttribute("seamless");
var scoped = Html_Attributes.booleanAttribute("scoped");
var scope = Html_Attributes.stringAttribute("scope");
var sandbox = Html_Attributes.stringAttribute("sandbox");
var rowspan = Html_Attributes.stringAttribute("rowspan");
var rows = Html_Attributes.numberAttribute("rows");
var reversed = Html_Attributes.booleanAttribute("reversed");
var required = Html_Attributes.booleanAttribute("required");
var rel = Html_Attributes.stringAttribute("rel");
var readonly = Html_Attributes.booleanAttribute("readonly");
var pubdate = Html_Attributes.stringAttribute("pubdate");
var preload = Html_Attributes.booleanAttribute("preload");
var poster = Html_Attributes.stringAttribute("poster");
var placeholder = Html_Attributes.stringAttribute("placeholder");
var ping = Html_Attributes.stringAttribute("ping");
var pattern = Html_Attributes.stringAttribute("pattern");
var novalidate = Html_Attributes.booleanAttribute("novalidate");
var name = Html_Attributes.stringAttribute("name");
var multiple = Html_Attributes.booleanAttribute("multiple");
var min = Html_Attributes.stringAttribute("min");
var method = Html_Attributes.stringAttribute("method");
var media = Html_Attributes.stringAttribute("media");
var maxlength = Html_Attributes.numberAttribute("maxlength");
var max = Html_Attributes.stringAttribute("max");
var manifest = Html_Attributes.stringAttribute("manifest");
var loop = Html_Attributes.booleanAttribute("loop");
var list = Html_Attributes.stringAttribute("list");
var language = Html_Attributes.stringAttribute("language");
var lang = Html_Attributes.stringAttribute("lang");
var kind = Html_Attributes.stringAttribute("kind");
var keytype = Html_Attributes.stringAttribute("keytype");
var itemporp = Html_Attributes.stringAttribute("itemporp");
var ismap = Html_Attributes.stringAttribute("ismap");
var id_ = Html_Attributes.stringAttribute("id");
var httpEquiv = Html_Attributes.stringAttribute("http-equiv");
var hreflang = Html_Attributes.stringAttribute("hreflang");
var href = Html_Attributes.stringAttribute("href");
var hidden = Html_Attributes.booleanAttribute("hidden");
var height = Html_Attributes.numberAttribute("height");
var headers = Html_Attributes.stringAttribute("headers");
var formaction = Html_Attributes.stringAttribute("formaction");
var form = Html_Attributes.stringAttribute("form");
var $$for = Html_Attributes.stringAttribute("for");
var enctype = Html_Attributes.stringAttribute("enctype");
var dropzone = Html_Attributes.stringAttribute("dropzone");
var draggable = Html_Attributes.stringAttribute("draggable");
var downloadAs = Html_Attributes.stringAttribute("downloadAs");
var download = Html_Attributes.booleanAttribute("download");
var disabled = Html_Attributes.booleanAttribute("disabled");
var dir = Html_Attributes.stringAttribute("dir");
var defer = Html_Attributes.booleanAttribute("defer");
var $$default = Html_Attributes.booleanAttribute("default");
var datetime = Html_Attributes.stringAttribute("datetime");
var coords = Html_Attributes.stringAttribute("coords");
var controls = Html_Attributes.booleanAttribute("controls");
var contextmenu = Html_Attributes.stringAttribute("contextmenu");
var contenteditable = Html_Attributes.booleanAttribute("contenteditable");
var content = Html_Attributes.stringAttribute("content");
var colspan = Html_Attributes.stringAttribute("colspan");
var cols = Html_Attributes.numberAttribute("cols");
var class_ = Html_Attributes.stringAttribute("className");
var cite = Html_Attributes.stringAttribute("cite");
var checked = Html_Attributes.booleanAttribute("checked");
var charset = Html_Attributes.stringAttribute("charset");
var challenge = Html_Attributes.stringAttribute("challenge");
var autosave = Html_Attributes.booleanAttribute("autosave");
var autoplay = Html_Attributes.booleanAttribute("autoplay");
var autofocus = Html_Attributes.booleanAttribute("autofocus");
var autocomplete = Html_Attributes.booleanAttribute("autocomplete");
var async = Html_Attributes.booleanAttribute("async");
var alt = Html_Attributes.stringAttribute("alt");
var align = Html_Attributes.stringAttribute("align");
var action = Html_Attributes.stringAttribute("action");
var accesskey = Html_Attributes.stringAttribute("accesskey");
var acceptCharset = Html_Attributes.stringAttribute("accept-charset");
var accept = Html_Attributes.stringAttribute("accept");
module.exports = {
    accept: accept, 
    acceptCharset: acceptCharset, 
    accesskey: accesskey, 
    action: action, 
    align: align, 
    alt: alt, 
    async: async, 
    autocomplete: autocomplete, 
    autofocus: autofocus, 
    autoplay: autoplay, 
    autosave: autosave, 
    challenge: challenge, 
    charset: charset, 
    checked: checked, 
    cite: cite, 
    class_: class_, 
    cols: cols, 
    colspan: colspan, 
    content: content, 
    contenteditable: contenteditable, 
    contextmenu: contextmenu, 
    controls: controls, 
    coords: coords, 
    datetime: datetime, 
    "default": $$default, 
    defer: defer, 
    dir: dir, 
    disabled: disabled, 
    download: download, 
    downloadAs: downloadAs, 
    draggable: draggable, 
    dropzone: dropzone, 
    enctype: enctype, 
    "for": $$for, 
    form: form, 
    formaction: formaction, 
    headers: headers, 
    height: height, 
    hidden: hidden, 
    href: href, 
    hreflang: hreflang, 
    httpEquiv: httpEquiv, 
    id_: id_, 
    ismap: ismap, 
    itemporp: itemporp, 
    keytype: keytype, 
    kind: kind, 
    lang: lang, 
    language: language, 
    list: list, 
    loop: loop, 
    manifest: manifest, 
    max: max, 
    maxlength: maxlength, 
    media: media, 
    method: method, 
    min: min, 
    multiple: multiple, 
    name: name, 
    novalidate: novalidate, 
    pattern: pattern, 
    ping: ping, 
    placeholder: placeholder, 
    poster: poster, 
    preload: preload, 
    pubdate: pubdate, 
    readonly: readonly, 
    rel: rel, 
    required: required, 
    reversed: reversed, 
    rows: rows, 
    rowspan: rowspan, 
    sandbox: sandbox, 
    scope: scope, 
    scoped: scoped, 
    seamless: seamless, 
    selected: selected, 
    shape: shape, 
    size: size, 
    spellcheck: spellcheck, 
    src: src, 
    srcdoc: srcdoc, 
    srclang: srclang, 
    start: start, 
    step: step, 
    tabindex: tabindex, 
    target: target, 
    title: title, 
    type_: type_, 
    usemap: usemap, 
    value: value, 
    width: width, 
    wrap: wrap
};

},{"Html.Attributes":18,"Prelude":25}],17:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
function Attribute(value0, value1) {
    this.value0 = value0;
    this.value1 = value1;
};
Attribute.create = function (value0) {
    return function (value1) {
        return new Attribute(value0, value1);
    };
};
function Key(value0) {
    this.value0 = value0;
};
Key.create = function (value0) {
    return new Key(value0);
};
function Namespace(value0) {
    this.value0 = value0;
};
Namespace.create = function (value0) {
    return new Namespace(value0);
};

    function unsafeCoerce(a) {
      return a;
    }
  ;
var getNamespaceString = function (_32) {
    if (_32 instanceof Namespace) {
        return _32.value0;
    };
    throw new Error("Failed pattern match");
};
var getKeyString = function (_31) {
    if (_31 instanceof Key) {
        return _31.value0;
    };
    throw new Error("Failed pattern match");
};
var getAttrValue = function (_30) {
    if (_30 instanceof Attribute) {
        return _30.value1;
    };
    throw new Error("Failed pattern match");
};
var getAttrKey = function (_29) {
    if (_29 instanceof Attribute) {
        return _29.value0;
    };
    throw new Error("Failed pattern match");
};
var attribute = Attribute.create;
var attrType = function (_28) {
    if (_28 instanceof Attribute) {
        return "a";
    };
    if (_28 instanceof Namespace) {
        return "n";
    };
    if (_28 instanceof Key) {
        return "k";
    };
    throw new Error("Failed pattern match");
};
module.exports = {
    Attribute: Attribute, 
    Key: Key, 
    Namespace: Namespace, 
    attrType: attrType, 
    attribute: attribute, 
    getAttrKey: getAttrKey, 
    getAttrValue: getAttrValue, 
    getKeyString: getKeyString, 
    getNamespaceString: getNamespaceString, 
    unsafeCoerce: unsafeCoerce
};

},{"Prelude":25}],18:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Html_Attributes_Internal = require("Html.Attributes.Internal");
var Html_VirtualDOM = require("Html.VirtualDOM");
var Data_Function = require("Data.Function");
var Prelude = require("Prelude");

    function mkEvHook (eh, fn) {
      return eh(function(ev){fn(ev)()});
    };
var style = function (v) {
    return Html_Attributes_Internal.attribute("style")(Html_Attributes_Internal.unsafeCoerce(v));
};
var stringAttribute = function (n) {
    return function (v) {
        return Html_Attributes_Internal.attribute(n)(Html_Attributes_Internal.unsafeCoerce(v));
    };
};
var on_ = function (ev) {
    return function (fn) {
        return Html_Attributes_Internal.attribute("ev-" + ev)(Html_Attributes_Internal.unsafeCoerce(mkEvHook(Html_VirtualDOM.virtualDOM.evHook, fn)));
    };
};
var numberAttribute = function (n) {
    return function (v) {
        return Html_Attributes_Internal.attribute(n)(Html_Attributes_Internal.unsafeCoerce(v));
    };
};
var namespace = Html_Attributes_Internal.Namespace.create;
var key = Html_Attributes_Internal.Key.create;
var data_ = function (nm) {
    return function (dat) {
        return Html_Attributes_Internal.attribute("data-" + nm)(Html_Attributes_Internal.unsafeCoerce(Html_VirtualDOM.virtualDOM.dsHook(dat)));
    };
};
var booleanAttribute = function (n) {
    return function (v) {
        return Html_Attributes_Internal.attribute(n)(Html_Attributes_Internal.unsafeCoerce(v));
    };
};
module.exports = {
    booleanAttribute: booleanAttribute, 
    data_: data_, 
    key: key, 
    namespace: namespace, 
    numberAttribute: numberAttribute, 
    on_: on_, 
    stringAttribute: stringAttribute, 
    style: style
};

},{"Data.Function":11,"Html.Attributes.Internal":17,"Html.VirtualDOM":22,"Prelude":25}],19:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Html_VirtualDOM = require("Html.VirtualDOM");
var Html_Attributes = require("Html.Attributes");
var Prelude = require("Prelude");
var Html_Events_Internal = require("Html.Events.Internal");

    function listenToImpl(d, l){
      return function(){
        d.listenTo(l);
      }
    };
var onMouseOver = function (f) {
    return Html_Attributes.on_("mouseover")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var onMouseOut = function (f) {
    return Html_Attributes.on_("mouseout")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var onMouseMove = function (f) {
    return Html_Attributes.on_("mousemove")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var onMouseLeave = function (f) {
    return Html_Attributes.on_("mouseleave")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var onMouseEnter = function (f) {
    return Html_Attributes.on_("mouseenter")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var listenTo = Data_Function.runFn2(listenToImpl)(Html_VirtualDOM.virtualDOM.delegator);
var listenMouseOver = listenTo("mouseover");
var listenMouseOut = listenTo("mouseout");
var listenMouseMove = listenTo("mousemove");
var listenMouseLeave = listenTo("mouseleave");
var listenMouseEnter = listenTo("mouseenter");
module.exports = {
    listenMouseEnter: listenMouseEnter, 
    listenMouseLeave: listenMouseLeave, 
    listenMouseMove: listenMouseMove, 
    listenMouseOut: listenMouseOut, 
    listenMouseOver: listenMouseOver, 
    listenTo: listenTo, 
    onMouseEnter: onMouseEnter, 
    onMouseLeave: onMouseLeave, 
    onMouseMove: onMouseMove, 
    onMouseOut: onMouseOut, 
    onMouseOver: onMouseOver
};

},{"Data.Function":11,"Html.Attributes":18,"Html.Events.Internal":20,"Html.VirtualDOM":22,"Prelude":25}],20:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var MouseHoverEvent = {
    create: function (value) {
        return value;
    }
};
var MouseButtonEvent = {
    create: function (value) {
        return value;
    }
};
var KeyEvent = {
    create: function (value) {
        return value;
    }
};
module.exports = {
    KeyEvent: KeyEvent, 
    MouseButtonEvent: MouseButtonEvent, 
    MouseHoverEvent: MouseHoverEvent
};

},{"Prelude":25}],21:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");
var Data_String = require("Data.String");
var Data_Function = require("Data.Function");
var Html_Attributes = require("Html.Attributes");
var Html_Events_Internal = require("Html.Events.Internal");
function Left() {

};
Left.value = new Left();
function Middle() {

};
Middle.value = new Middle();
function Right() {

};
Right.value = new Right();
function HasModifier(altKey, ctrlKey, metaKey, shiftKey) {
    this.altKey = altKey;
    this.ctrlKey = ctrlKey;
    this.metaKey = metaKey;
    this.shiftKey = shiftKey;
};
function HasPosition(client, page, screen) {
    this.client = client;
    this.page = page;
    this.screen = screen;
};

    function eventPropImpl(ev, prop) {
      return ev[prop];
    };

    function keyCode(evt){
      evt = evt || window.event;
      return evt.which || evt.keyCode;
    };

    function fromCharCode(c) {
      return String.fromCharCode(c);
    };

    function testBitImpl(n, b) {
      return (n>>b) % 2 !== 0
    };

    function buttonNumber(evt) {
      return evt.button;
    };

    function positionImpl(i, evt){
      return {x: evt[i.x], y: evt[i.y]};
    };
var showPosition = function (p) {
    return "(" + (Prelude.show(Prelude.showNumber)(p.x) + ("," + (Prelude.show(Prelude.showNumber)(p.y) + ")")));
};
var showButton = new Prelude.Show(function (_11) {
    if (_11 instanceof Left) {
        return "Left";
    };
    if (_11 instanceof Middle) {
        return "Middle";
    };
    if (_11 instanceof Right) {
        return "Right";
    };
    throw new Error("Failed pattern match");
});
var shiftKey = function (dict) {
    return dict.shiftKey;
};
var screen = function (dict) {
    return dict.screen;
};
var page = function (dict) {
    return dict.page;
};
var onUnload = function (f) {
    return Html_Attributes.on_("unload")(Prelude["const"](f));
};
var onTouchStart = function (f) {
    return Html_Attributes.on_("touchstart")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var onTouchEnd = function (f) {
    return Html_Attributes.on_("touchend")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var onTouchCancel = function (f) {
    return Html_Attributes.on_("touchcalcel")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseHoverEvent.create));
};
var onSubmit = function (f) {
    return Html_Attributes.on_("submit")(Prelude["const"](f));
};
var onSelect = function (f) {
    return Html_Attributes.on_("select")(Prelude["const"](f));
};
var onMouseUp = function (f) {
    return Html_Attributes.on_("mouseup")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseButtonEvent.create));
};
var onMouseDown = function (f) {
    return Html_Attributes.on_("mousedown")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseButtonEvent.create));
};
var onKeyUp = function (f) {
    return Html_Attributes.on_("keyup")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.KeyEvent.create));
};
var onKeyPress = function (f) {
    return Html_Attributes.on_("keypress")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.KeyEvent.create));
};
var onKeyDown = function (f) {
    return Html_Attributes.on_("keydown")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.KeyEvent.create));
};
var onInput = function (f) {
    return Html_Attributes.on_("input")(Prelude["const"](f));
};
var onFocusOut = function (f) {
    return Html_Attributes.on_("focusout")(Prelude["const"](f));
};
var onFocusIn = function (f) {
    return Html_Attributes.on_("focusin")(Prelude["const"](f));
};
var onFocus = function (f) {
    return Html_Attributes.on_("focus")(Prelude["const"](f));
};
var onDoubleClick = function (f) {
    return Html_Attributes.on_("dblclick")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseButtonEvent.create));
};
var onContextMenu = function (f) {
    return Html_Attributes.on_("contextmenu")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseButtonEvent.create));
};
var onClick = function (f) {
    return Html_Attributes.on_("click")(Prelude["<<<"](Prelude.semigroupoidArr)(f)(Html_Events_Internal.MouseButtonEvent.create));
};
var onChange = function (f) {
    return Html_Attributes.on_("change")(Prelude["const"](f));
};
var onBlur = function (f) {
    return Html_Attributes.on_("blur")(Prelude["const"](f));
};
var mouseHoverHasPosition = new HasPosition(Data_Function.runFn2(positionImpl)({
    x: "clientX", 
    y: "clientY"
}), Data_Function.runFn2(positionImpl)({
    x: "pageX", 
    y: "pageY"
}), Data_Function.runFn2(positionImpl)({
    x: "screenX", 
    y: "screenY"
}));
var mouseButtonHasPosition = new HasPosition(Data_Function.runFn2(positionImpl)({
    x: "clientX", 
    y: "clientY"
}), Data_Function.runFn2(positionImpl)({
    x: "pageX", 
    y: "pageY"
}), Data_Function.runFn2(positionImpl)({
    x: "screenX", 
    y: "screenY"
}));
var metaKey = function (dict) {
    return dict.metaKey;
};
var eventProp = Data_Function.runFn2(eventPropImpl);
var keyEventHasModifier = new HasModifier(function (_12) {
    return eventProp(_12)("altKey");
}, function (_13) {
    return eventProp(_13)("ctrlKey");
}, function (_14) {
    return eventProp(_14)("metaKey");
}, function (_15) {
    return eventProp(_15)("shiftKey");
});
var mouseButtonEventHasModifier = new HasModifier(function (_16) {
    return eventProp(_16)("altKey");
}, function (_17) {
    return eventProp(_17)("ctrlKey");
}, function (_18) {
    return eventProp(_18)("metaKey");
}, function (_19) {
    return eventProp(_19)("shiftKey");
});
var mouseHoverEventHasModifier = new HasModifier(function (_20) {
    return eventProp(_20)("altKey");
}, function (_21) {
    return eventProp(_21)("ctrlKey");
}, function (_22) {
    return eventProp(_22)("metaKey");
}, function (_23) {
    return eventProp(_23)("shiftKey");
});
var ctrlKey = function (dict) {
    return dict.ctrlKey;
};
var client = function (dict) {
    return dict.client;
};
var button = function (e) {
    var _50 = buttonNumber(e);
    if (_50 === 0) {
        return Left.value;
    };
    if (_50 === 2) {
        return Right.value;
    };
    return Middle.value;
};
var altKey = function (dict) {
    return dict.altKey;
};
var showKeyEvent = new Prelude.Show(function (e) {
    return (altKey(keyEventHasModifier)(e) ? "Alt-" : "") + ((ctrlKey(keyEventHasModifier)(e) ? "Ctrl-" : "") + ((metaKey(keyEventHasModifier)(e) ? "Meta-" : "") + ((shiftKey(keyEventHasModifier)(e) ? "Shift-" : "") + fromCharCode(keyCode(e)))));
});
var showMouseButtonEvent = new Prelude.Show(function (e) {
    return Data_String.joinWith("-")((altKey(mouseButtonEventHasModifier)(e) ? Prelude[":"]("Alt") : Prelude.id(Prelude.categoryArr))((ctrlKey(mouseButtonEventHasModifier)(e) ? Prelude[":"]("Ctrl") : Prelude.id(Prelude.categoryArr))((metaKey(mouseButtonEventHasModifier)(e) ? Prelude[":"]("Meta") : Prelude.id(Prelude.categoryArr))((shiftKey(mouseButtonEventHasModifier)(e) ? Prelude[":"]("Shift") : Prelude.id(Prelude.categoryArr))([ Prelude.show(showButton)(button(e)) + ("[client:" + (showPosition(client(mouseButtonHasPosition)(e)) + (",page:" + (showPosition(page(mouseButtonHasPosition)(e)) + (",screen:" + (showPosition(screen(mouseButtonHasPosition)(e)) + "]")))))) ])))));
});
var showMouseHoverEvent = new Prelude.Show(function (e) {
    return Data_String.joinWith("-")((altKey(mouseHoverEventHasModifier)(e) ? Prelude[":"]("Alt") : Prelude.id(Prelude.categoryArr))((ctrlKey(mouseHoverEventHasModifier)(e) ? Prelude[":"]("Ctrl") : Prelude.id(Prelude.categoryArr))((metaKey(mouseHoverEventHasModifier)(e) ? Prelude[":"]("Meta") : Prelude.id(Prelude.categoryArr))((shiftKey(mouseHoverEventHasModifier)(e) ? Prelude[":"]("Shift") : Prelude.id(Prelude.categoryArr))([ "[client:" + (showPosition(client(mouseHoverHasPosition)(e)) + (",page:" + (showPosition(page(mouseHoverHasPosition)(e)) + (",screen:" + (showPosition(screen(mouseHoverHasPosition)(e)) + "]"))))) ])))));
});
module.exports = {
    HasModifier: HasModifier, 
    HasPosition: HasPosition, 
    Left: Left, 
    Middle: Middle, 
    Right: Right, 
    altKey: altKey, 
    button: button, 
    client: client, 
    ctrlKey: ctrlKey, 
    keyEventHasModifier: keyEventHasModifier, 
    metaKey: metaKey, 
    mouseButtonEventHasModifier: mouseButtonEventHasModifier, 
    mouseButtonHasPosition: mouseButtonHasPosition, 
    mouseHoverEventHasModifier: mouseHoverEventHasModifier, 
    mouseHoverHasPosition: mouseHoverHasPosition, 
    onBlur: onBlur, 
    onChange: onChange, 
    onClick: onClick, 
    onContextMenu: onContextMenu, 
    onDoubleClick: onDoubleClick, 
    onFocus: onFocus, 
    onFocusIn: onFocusIn, 
    onFocusOut: onFocusOut, 
    onInput: onInput, 
    onKeyDown: onKeyDown, 
    onKeyPress: onKeyPress, 
    onKeyUp: onKeyUp, 
    onMouseDown: onMouseDown, 
    onMouseUp: onMouseUp, 
    onSelect: onSelect, 
    onSubmit: onSubmit, 
    onTouchCancel: onTouchCancel, 
    onTouchEnd: onTouchEnd, 
    onTouchStart: onTouchStart, 
    onUnload: onUnload, 
    page: page, 
    screen: screen, 
    shiftKey: shiftKey, 
    showButton: showButton, 
    showKeyEvent: showKeyEvent, 
    showMouseButtonEvent: showMouseButtonEvent, 
    showMouseHoverEvent: showMouseHoverEvent
};

},{"Data.Function":11,"Data.String":14,"Html.Attributes":18,"Html.Events.Internal":20,"Prelude":25}],22:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Prelude = require("Prelude");

var virtualDOM = null;
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	var diff    = __webpack_require__(2);
	var patch   = __webpack_require__(3);
	var create  = __webpack_require__(4);
	var VNode   = __webpack_require__(5);
	var VText   = __webpack_require__(6);

	var dsHook = __webpack_require__(7);
	var evHook = __webpack_require__(8);

	var delegator = __webpack_require__(1);

	virtualDOM =
	  { diff:   diff
	  , patch:  patch
	  , create: create
	  , vnode:  VNode
	  , vtext:  VText
	  , dsHook: dsHook
	  , evHook: evHook
	  , delegator: delegator()
	  }


/***/ },
/* 1 */
/***/ function(module, exports, __webpack_require__) {

	var Individual = __webpack_require__(18)
	var cuid = __webpack_require__(30)
	var globalDocument = __webpack_require__(23)

	var DOMDelegator = __webpack_require__(9)

	var versionKey = "12"
	var cacheKey = "__DOM_DELEGATOR_CACHE@" + versionKey
	var cacheTokenKey = "__DOM_DELEGATOR_CACHE_TOKEN@" + versionKey
	var delegatorCache = Individual(cacheKey, {
	    delegators: {}
	})
	var commonEvents = [
	    "blur", "change", "click",  "contextmenu", "dblclick",
	    "error","focus", "focusin", "focusout", "input", "keydown",
	    "keypress", "keyup", "load", "mousedown", "mouseup",
	    "resize", "select", "submit", "touchcancel",
	    "touchend", "touchstart", "unload"
	]

	/*  Delegator is a thin wrapper around a singleton `DOMDelegator`
	        instance.

	    Only one DOMDelegator should exist because we do not want
	        duplicate event listeners bound to the DOM.

	    `Delegator` will also `listenTo()` all events unless
	        every caller opts out of it
	*/
	module.exports = Delegator

	function Delegator(opts) {
	    opts = opts || {}
	    var document = opts.document || globalDocument

	    var cacheKey = document[cacheTokenKey]

	    if (!cacheKey) {
	        cacheKey =
	            document[cacheTokenKey] = cuid()
	    }

	    var delegator = delegatorCache.delegators[cacheKey]

	    if (!delegator) {
	        delegator = delegatorCache.delegators[cacheKey] =
	            new DOMDelegator(document)
	    }

	    if (opts.defaultEvents !== false) {
	        for (var i = 0; i < commonEvents.length; i++) {
	            delegator.listenTo(commonEvents[i])
	        }
	    }

	    return delegator
	}

	Delegator.allocateHandle = DOMDelegator.allocateHandle;
	Delegator.transformHandle = DOMDelegator.transformHandle;


/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	var diff = __webpack_require__(15)

	module.exports = diff


/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	var patch = __webpack_require__(16)

	module.exports = patch


/***/ },
/* 4 */
/***/ function(module, exports, __webpack_require__) {

	var createElement = __webpack_require__(17)

	module.exports = createElement


/***/ },
/* 5 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(10)
	var isVNode = __webpack_require__(11)
	var isWidget = __webpack_require__(12)
	var isThunk = __webpack_require__(13)
	var isVHook = __webpack_require__(14)

	module.exports = VirtualNode

	var noProperties = {}
	var noChildren = []

	function VirtualNode(tagName, properties, children, key, namespace) {
	    this.tagName = tagName
	    this.properties = properties || noProperties
	    this.children = children || noChildren
	    this.key = key != null ? String(key) : undefined
	    this.namespace = (typeof namespace === "string") ? namespace : null

	    var count = (children && children.length) || 0
	    var descendants = 0
	    var hasWidgets = false
	    var hasThunks = false
	    var descendantHooks = false
	    var hooks

	    for (var propName in properties) {
	        if (properties.hasOwnProperty(propName)) {
	            var property = properties[propName]
	            if (isVHook(property) && property.unhook) {
	                if (!hooks) {
	                    hooks = {}
	                }

	                hooks[propName] = property
	            }
	        }
	    }

	    for (var i = 0; i < count; i++) {
	        var child = children[i]
	        if (isVNode(child)) {
	            descendants += child.count || 0

	            if (!hasWidgets && child.hasWidgets) {
	                hasWidgets = true
	            }

	            if (!hasThunks && child.hasThunks) {
	                hasThunks = true
	            }

	            if (!descendantHooks && (child.hooks || child.descendantHooks)) {
	                descendantHooks = true
	            }
	        } else if (!hasWidgets && isWidget(child)) {
	            if (typeof child.destroy === "function") {
	                hasWidgets = true
	            }
	        } else if (!hasThunks && isThunk(child)) {
	            hasThunks = true;
	        }
	    }

	    this.count = count + descendants
	    this.hasWidgets = hasWidgets
	    this.hasThunks = hasThunks
	    this.hooks = hooks
	    this.descendantHooks = descendantHooks
	}

	VirtualNode.prototype.version = version
	VirtualNode.prototype.type = "VirtualNode"


/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(10)

	module.exports = VirtualText

	function VirtualText(text) {
	    this.text = String(text)
	}

	VirtualText.prototype.version = version
	VirtualText.prototype.type = "VirtualText"


/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	var DataSet = __webpack_require__(22)

	module.exports = DataSetHook;

	function DataSetHook(value) {
	    if (!(this instanceof DataSetHook)) {
	        return new DataSetHook(value);
	    }

	    this.value = value;
	}

	DataSetHook.prototype.hook = function (node, propertyName) {
	    var ds = DataSet(node)
	    var propName = propertyName.substr(5)

	    ds[propName] = this.value;
	};


/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	var DataSet = __webpack_require__(22)

	module.exports = DataSetHook;

	function DataSetHook(value) {
	    if (!(this instanceof DataSetHook)) {
	        return new DataSetHook(value);
	    }

	    this.value = value;
	}

	DataSetHook.prototype.hook = function (node, propertyName) {
	    var ds = DataSet(node)
	    var propName = propertyName.substr(3)

	    ds[propName] = this.value;
	};

	DataSetHook.prototype.unhook = function(node, propertyName) {
	    var ds = DataSet(node);
	    var propName = propertyName.substr(3);

	    ds[propName] = undefined;
	}


/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	var globalDocument = __webpack_require__(23)
	var DataSet = __webpack_require__(31)
	var createStore = __webpack_require__(33)

	var addEvent = __webpack_require__(19)
	var removeEvent = __webpack_require__(20)
	var ProxyEvent = __webpack_require__(21)

	var HANDLER_STORE = createStore()

	module.exports = DOMDelegator

	function DOMDelegator(document) {
	    if (!(this instanceof DOMDelegator)) {
	        return new DOMDelegator(document);
	    }

	    document = document || globalDocument

	    this.target = document.documentElement
	    this.events = {}
	    this.rawEventListeners = {}
	    this.globalListeners = {}
	}

	DOMDelegator.prototype.addEventListener = addEvent
	DOMDelegator.prototype.removeEventListener = removeEvent

	DOMDelegator.allocateHandle =
	    function allocateHandle(func) {
	        var handle = new Handle()

	        HANDLER_STORE(handle).func = func;

	        return handle
	    }

	DOMDelegator.transformHandle =
	    function transformHandle(handle, broadcast) {
	        var func = HANDLER_STORE(handle).func

	        return this.allocateHandle(function (ev) {
	            broadcast(ev, func);
	        })
	    }

	DOMDelegator.prototype.addGlobalEventListener =
	    function addGlobalEventListener(eventName, fn) {
	        var listeners = this.globalListeners[eventName] || [];
	        if (listeners.indexOf(fn) === -1) {
	            listeners.push(fn)
	        }

	        this.globalListeners[eventName] = listeners;
	    }

	DOMDelegator.prototype.removeGlobalEventListener =
	    function removeGlobalEventListener(eventName, fn) {
	        var listeners = this.globalListeners[eventName] || [];

	        var index = listeners.indexOf(fn)
	        if (index !== -1) {
	            listeners.splice(index, 1)
	        }
	    }

	DOMDelegator.prototype.listenTo = function listenTo(eventName) {
	    if (!(eventName in this.events)) {
	        this.events[eventName] = 0;
	    }

	    this.events[eventName]++;

	    if (this.events[eventName] !== 1) {
	        return
	    }

	    var listener = this.rawEventListeners[eventName]
	    if (!listener) {
	        listener = this.rawEventListeners[eventName] =
	            createHandler(eventName, this)
	    }

	    this.target.addEventListener(eventName, listener, true)
	}

	DOMDelegator.prototype.unlistenTo = function unlistenTo(eventName) {
	    if (!(eventName in this.events)) {
	        this.events[eventName] = 0;
	    }

	    if (this.events[eventName] === 0) {
	        throw new Error("already unlistened to event.");
	    }

	    this.events[eventName]--;

	    if (this.events[eventName] !== 0) {
	        return
	    }

	    var listener = this.rawEventListeners[eventName]

	    if (!listener) {
	        throw new Error("dom-delegator#unlistenTo: cannot " +
	            "unlisten to " + eventName)
	    }

	    this.target.removeEventListener(eventName, listener, true)
	}

	function createHandler(eventName, delegator) {
	    var globalListeners = delegator.globalListeners;
	    var delegatorTarget = delegator.target;

	    return handler

	    function handler(ev) {
	        var globalHandlers = globalListeners[eventName] || []

	        if (globalHandlers.length > 0) {
	            var globalEvent = new ProxyEvent(ev);
	            globalEvent.currentTarget = delegatorTarget;
	            callListeners(globalHandlers, globalEvent)
	        }

	        findAndInvokeListeners(ev.target, ev, eventName)
	    }
	}

	function findAndInvokeListeners(elem, ev, eventName) {
	    var listener = getListener(elem, eventName)

	    if (listener && listener.handlers.length > 0) {
	        var listenerEvent = new ProxyEvent(ev);
	        listenerEvent.currentTarget = listener.currentTarget
	        callListeners(listener.handlers, listenerEvent)

	        if (listenerEvent._bubbles) {
	            var nextTarget = listener.currentTarget.parentNode
	            findAndInvokeListeners(nextTarget, ev, eventName)
	        }
	    }
	}

	function getListener(target, type) {
	    // terminate recursion if parent is `null`
	    if (target === null) {
	        return null
	    }

	    var ds = DataSet(target)
	    // fetch list of handler fns for this event
	    var handler = ds[type]
	    var allHandler = ds.event

	    if (!handler && !allHandler) {
	        return getListener(target.parentNode, type)
	    }

	    var handlers = [].concat(handler || [], allHandler || [])
	    return new Listener(target, handlers)
	}

	function callListeners(handlers, ev) {
	    handlers.forEach(function (handler) {
	        if (typeof handler === "function") {
	            handler(ev)
	        } else if (typeof handler.handleEvent === "function") {
	            handler.handleEvent(ev)
	        } else if (handler.type === "dom-delegator-handle") {
	            HANDLER_STORE(handler).func(ev)
	        } else {
	            throw new Error("dom-delegator: unknown handler " +
	                "found: " + JSON.stringify(handlers));
	        }
	    })
	}

	function Listener(target, handlers) {
	    this.currentTarget = target
	    this.handlers = handlers
	}

	function Handle() {
	    this.type = "dom-delegator-handle"
	}


/***/ },
/* 10 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = "1"


/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(10)

	module.exports = isVirtualNode

	function isVirtualNode(x) {
	    return x && x.type === "VirtualNode" && x.version === version
	}


/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = isWidget

	function isWidget(w) {
	    return w && w.type === "Widget"
	}


/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = isThunk

	function isThunk(t) {
	    return t && t.type === "Thunk"
	}


/***/ },
/* 14 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = isHook

	function isHook(hook) {
	    return hook && typeof hook.hook === "function" &&
	        !hook.hasOwnProperty("hook")
	}


/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	var isArray = __webpack_require__(34)
	var isObject = __webpack_require__(35)

	var VPatch = __webpack_require__(24)
	var isVNode = __webpack_require__(11)
	var isVText = __webpack_require__(25)
	var isWidget = __webpack_require__(12)
	var isThunk = __webpack_require__(13)
	var isHook = __webpack_require__(14)
	var handleThunk = __webpack_require__(26)

	module.exports = diff

	function diff(a, b) {
	    var patch = { a: a }
	    walk(a, b, patch, 0)
	    return patch
	}

	function walk(a, b, patch, index) {
	    if (a === b) {
	        return
	    }

	    var apply = patch[index]
	    var applyClear = false

	    if (isThunk(a) || isThunk(b)) {
	        thunks(a, b, patch, index)
	    } else if (b == null) {

	        // If a is a widget we will add a remove patch for it
	        // Otherwise any child widgets/hooks must be destroyed.
	        // This prevents adding two remove patches for a widget.
	        if (!isWidget(a)) {
	            clearState(a, patch, index)
	            apply = patch[index]
	        }

	        apply = appendPatch(apply, new VPatch(VPatch.REMOVE, a, b))
	    } else if (isVNode(b)) {
	        if (isVNode(a)) {
	            if (a.tagName === b.tagName &&
	                a.namespace === b.namespace &&
	                a.key === b.key) {
	                var propsPatch = diffProps(a.properties, b.properties)
	                if (propsPatch) {
	                    apply = appendPatch(apply,
	                        new VPatch(VPatch.PROPS, a, propsPatch))
	                }
	                apply = diffChildren(a, b, patch, apply, index)
	            } else {
	                apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	                applyClear = true
	            }
	        } else {
	            apply = appendPatch(apply, new VPatch(VPatch.VNODE, a, b))
	            applyClear = true
	        }
	    } else if (isVText(b)) {
	        if (!isVText(a)) {
	            applyClear = true
	        } else if (a.text !== b.text) {
	            apply = appendPatch(apply, new VPatch(VPatch.VTEXT, a, b))
	        }
	    } else if (isWidget(b)) {
	        if (!isWidget(a)) {
	            applyClear = true;
	        }

	        apply = appendPatch(apply, new VPatch(VPatch.WIDGET, a, b))
	    }

	    if (apply) {
	        patch[index] = apply
	    }

	    if (applyClear) {
	        clearState(a, patch, index)
	    }
	}

	function diffProps(a, b) {
	    var diff

	    for (var aKey in a) {
	        if (!(aKey in b)) {
	            diff = diff || {}
	            diff[aKey] = undefined
	        }

	        var aValue = a[aKey]
	        var bValue = b[aKey]

	        if (aValue === bValue) {
	            continue
	        } else if (isObject(aValue) && isObject(bValue)) {
	            if (getPrototype(bValue) !== getPrototype(aValue)) {
	                diff = diff || {}
	                diff[aKey] = bValue
	            } else if (isHook(bValue)) {
	                 diff = diff || {}
	                 diff[aKey] = bValue
	            } else {
	                var objectDiff = diffProps(aValue, bValue)
	                if (objectDiff) {
	                    diff = diff || {}
	                    diff[aKey] = objectDiff
	                }
	            }
	        } else {
	            diff = diff || {}
	            diff[aKey] = bValue
	        }
	    }

	    for (var bKey in b) {
	        if (!(bKey in a)) {
	            diff = diff || {}
	            diff[bKey] = b[bKey]
	        }
	    }

	    return diff
	}

	function getPrototype(value) {
	    if (Object.getPrototypeOf) {
	        return Object.getPrototypeOf(value)
	    } else if (value.__proto__) {
	        return value.__proto__
	    } else if (value.constructor) {
	        return value.constructor.prototype
	    }
	}

	function diffChildren(a, b, patch, apply, index) {
	    var aChildren = a.children
	    var bChildren = reorder(aChildren, b.children)

	    var aLen = aChildren.length
	    var bLen = bChildren.length
	    var len = aLen > bLen ? aLen : bLen

	    for (var i = 0; i < len; i++) {
	        var leftNode = aChildren[i]
	        var rightNode = bChildren[i]
	        index += 1

	        if (!leftNode) {
	            if (rightNode) {
	                // Excess nodes in b need to be added
	                apply = appendPatch(apply,
	                    new VPatch(VPatch.INSERT, null, rightNode))
	            }
	        } else {
	            walk(leftNode, rightNode, patch, index)
	        }

	        if (isVNode(leftNode) && leftNode.count) {
	            index += leftNode.count
	        }
	    }

	    if (bChildren.moves) {
	        // Reorder nodes last
	        apply = appendPatch(apply, new VPatch(VPatch.ORDER, a, bChildren.moves))
	    }

	    return apply
	}

	function clearState(vNode, patch, index) {
	    // TODO: Make this a single walk, not two
	    unhook(vNode, patch, index)
	    destroyWidgets(vNode, patch, index)
	}

	// Patch records for all destroyed widgets must be added because we need
	// a DOM node reference for the destroy function
	function destroyWidgets(vNode, patch, index) {
	    if (isWidget(vNode)) {
	        if (typeof vNode.destroy === "function") {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(VPatch.REMOVE, vNode, null)
	            )
	        }
	    } else if (isVNode(vNode) && (vNode.hasWidgets || vNode.hasThunks)) {
	        var children = vNode.children
	        var len = children.length
	        for (var i = 0; i < len; i++) {
	            var child = children[i]
	            index += 1

	            destroyWidgets(child, patch, index)

	            if (isVNode(child) && child.count) {
	                index += child.count
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}

	// Create a sub-patch for thunks
	function thunks(a, b, patch, index) {
	    var nodes = handleThunk(a, b);
	    var thunkPatch = diff(nodes.a, nodes.b)
	    if (hasPatches(thunkPatch)) {
	        patch[index] = new VPatch(VPatch.THUNK, null, thunkPatch)
	    }
	}

	function hasPatches(patch) {
	    for (var index in patch) {
	        if (index !== "a") {
	            return true;
	        }
	    }

	    return false;
	}

	// Execute hooks when two nodes are identical
	function unhook(vNode, patch, index) {
	    if (isVNode(vNode)) {
	        if (vNode.hooks) {
	            patch[index] = appendPatch(
	                patch[index],
	                new VPatch(
	                    VPatch.PROPS,
	                    vNode,
	                    undefinedKeys(vNode.hooks)
	                )
	            )
	        }

	        if (vNode.descendantHooks || vNode.hasThunks) {
	            var children = vNode.children
	            var len = children.length
	            for (var i = 0; i < len; i++) {
	                var child = children[i]
	                index += 1

	                unhook(child, patch, index)

	                if (isVNode(child) && child.count) {
	                    index += child.count
	                }
	            }
	        }
	    } else if (isThunk(vNode)) {
	        thunks(vNode, null, patch, index)
	    }
	}

	function undefinedKeys(obj) {
	    var result = {}

	    for (var key in obj) {
	        result[key] = undefined
	    }

	    return result
	}

	// List diff, naive left to right reordering
	function reorder(aChildren, bChildren) {

	    var bKeys = keyIndex(bChildren)

	    if (!bKeys) {
	        return bChildren
	    }

	    var aKeys = keyIndex(aChildren)

	    if (!aKeys) {
	        return bChildren
	    }

	    var bMatch = {}, aMatch = {}

	    for (var aKey in bKeys) {
	        bMatch[bKeys[aKey]] = aKeys[aKey]
	    }

	    for (var bKey in aKeys) {
	        aMatch[aKeys[bKey]] = bKeys[bKey]
	    }

	    var aLen = aChildren.length
	    var bLen = bChildren.length
	    var len = aLen > bLen ? aLen : bLen
	    var shuffle = []
	    var freeIndex = 0
	    var i = 0
	    var moveIndex = 0
	    var moves = {}
	    var removes = moves.removes = {}
	    var reverse = moves.reverse = {}
	    var hasMoves = false

	    while (freeIndex < len) {
	        var move = aMatch[i]
	        if (move !== undefined) {
	            shuffle[i] = bChildren[move]
	            if (move !== moveIndex) {
	                moves[move] = moveIndex
	                reverse[moveIndex] = move
	                hasMoves = true
	            }
	            moveIndex++
	        } else if (i in aMatch) {
	            shuffle[i] = undefined
	            removes[i] = moveIndex++
	            hasMoves = true
	        } else {
	            while (bMatch[freeIndex] !== undefined) {
	                freeIndex++
	            }

	            if (freeIndex < len) {
	                var freeChild = bChildren[freeIndex]
	                if (freeChild) {
	                    shuffle[i] = freeChild
	                    if (freeIndex !== moveIndex) {
	                        hasMoves = true
	                        moves[freeIndex] = moveIndex
	                        reverse[moveIndex] = freeIndex
	                    }
	                    moveIndex++
	                }
	                freeIndex++
	            }
	        }
	        i++
	    }

	    if (hasMoves) {
	        shuffle.moves = moves
	    }

	    return shuffle
	}

	function keyIndex(children) {
	    var i, keys

	    for (i = 0; i < children.length; i++) {
	        var child = children[i]

	        if (child.key !== undefined) {
	            keys = keys || {}
	            keys[child.key] = i
	        }
	    }

	    return keys
	}

	function appendPatch(apply, patch) {
	    if (apply) {
	        if (isArray(apply)) {
	            apply.push(patch)
	        } else {
	            apply = [apply, patch]
	        }

	        return apply
	    } else {
	        return patch
	    }
	}


/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(37)
	var isArray = __webpack_require__(34)

	var domIndex = __webpack_require__(27)
	var patchOp = __webpack_require__(28)
	module.exports = patch

	function patch(rootNode, patches) {
	    return patchRecursive(rootNode, patches)
	}

	function patchRecursive(rootNode, patches, renderOptions) {
	    var indices = patchIndices(patches)

	    if (indices.length === 0) {
	        return rootNode
	    }

	    var index = domIndex(rootNode, patches.a, indices)
	    var ownerDocument = rootNode.ownerDocument

	    if (!renderOptions) {
	        renderOptions = { patch: patchRecursive }
	        if (ownerDocument !== document) {
	            renderOptions.document = ownerDocument
	        }
	    }

	    for (var i = 0; i < indices.length; i++) {
	        var nodeIndex = indices[i]
	        rootNode = applyPatch(rootNode,
	            index[nodeIndex],
	            patches[nodeIndex],
	            renderOptions)
	    }

	    return rootNode
	}

	function applyPatch(rootNode, domNode, patchList, renderOptions) {
	    if (!domNode) {
	        return rootNode
	    }

	    var newNode

	    if (isArray(patchList)) {
	        for (var i = 0; i < patchList.length; i++) {
	            newNode = patchOp(patchList[i], domNode, renderOptions)

	            if (domNode === rootNode) {
	                rootNode = newNode
	            }
	        }
	    } else {
	        newNode = patchOp(patchList, domNode, renderOptions)

	        if (domNode === rootNode) {
	            rootNode = newNode
	        }
	    }

	    return rootNode
	}

	function patchIndices(patches) {
	    var indices = []

	    for (var key in patches) {
	        if (key !== "a") {
	            indices.push(Number(key))
	        }
	    }

	    return indices
	}


/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	var document = __webpack_require__(37)

	var applyProperties = __webpack_require__(29)

	var isVNode = __webpack_require__(11)
	var isVText = __webpack_require__(25)
	var isWidget = __webpack_require__(12)
	var handleThunk = __webpack_require__(26)

	module.exports = createElement

	function createElement(vnode, opts) {
	    var doc = opts ? opts.document || document : document
	    var warn = opts ? opts.warn : null

	    vnode = handleThunk(vnode).a

	    if (isWidget(vnode)) {
	        return vnode.init()
	    } else if (isVText(vnode)) {
	        return doc.createTextNode(vnode.text)
	    } else if (!isVNode(vnode)) {
	        if (warn) {
	            warn("Item is not a valid virtual dom node", vnode)
	        }
	        return null
	    }

	    var node = (vnode.namespace === null) ?
	        doc.createElement(vnode.tagName) :
	        doc.createElementNS(vnode.namespace, vnode.tagName)

	    var props = vnode.properties
	    applyProperties(node, props)

	    var children = vnode.children

	    for (var i = 0; i < children.length; i++) {
	        var childNode = createElement(children[i], opts)
	        if (childNode) {
	            node.appendChild(childNode)
	        }
	    }

	    return node
	}


/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var root = typeof window !== 'undefined' ?
	    window : typeof global !== 'undefined' ?
	    global : {};

	module.exports = Individual

	function Individual(key, value) {
	    if (root[key]) {
	        return root[key]
	    }

	    Object.defineProperty(root, key, {
	        value: value
	        , configurable: true
	    })

	    return value
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	var DataSet = __webpack_require__(31)

	module.exports = addEvent

	function addEvent(target, type, handler) {
	    var ds = DataSet(target)
	    var events = ds[type]

	    if (!events) {
	        ds[type] = handler
	    } else if (Array.isArray(events)) {
	        if (events.indexOf(handler) === -1) {
	            events.push(handler)
	        }
	    } else if (events !== handler) {
	        ds[type] = [events, handler]
	    }
	}


/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	var DataSet = __webpack_require__(31)

	module.exports = removeEvent

	function removeEvent(target, type, handler) {
	    var ds = DataSet(target)
	    var events = ds[type]

	    if (!events) {
	        return
	    } else if (Array.isArray(events)) {
	        var index = events.indexOf(handler)
	        if (index !== -1) {
	            events.splice(index, 1)
	        }
	    } else if (events === handler) {
	        ds[type] = null
	    }
	}


/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	var inherits = __webpack_require__(41)

	var ALL_PROPS = [
	    "altKey", "bubbles", "cancelable", "ctrlKey",
	    "eventPhase", "metaKey", "relatedTarget", "shiftKey",
	    "target", "timeStamp", "type", "view", "which"
	]
	var KEY_PROPS = ["char", "charCode", "key", "keyCode"]
	var MOUSE_PROPS = [
	    "button", "buttons", "clientX", "clientY", "layerX",
	    "layerY", "offsetX", "offsetY", "pageX", "pageY",
	    "screenX", "screenY", "toElement"
	]

	var rkeyEvent = /^key|input/
	var rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/

	module.exports = ProxyEvent

	function ProxyEvent(ev) {
	    if (!(this instanceof ProxyEvent)) {
	        return new ProxyEvent(ev)
	    }

	    if (rkeyEvent.test(ev.type)) {
	        return new KeyEvent(ev)
	    } else if (rmouseEvent.test(ev.type)) {
	        return new MouseEvent(ev)
	    }

	    for (var i = 0; i < ALL_PROPS.length; i++) {
	        var propKey = ALL_PROPS[i]
	        this[propKey] = ev[propKey]
	    }

	    this._rawEvent = ev
	    this._bubbles = false;
	}

	ProxyEvent.prototype.preventDefault = function () {
	    this._rawEvent.preventDefault()
	}

	ProxyEvent.prototype.startPropagation = function () {
	    this._bubbles = true;
	}

	function MouseEvent(ev) {
	    for (var i = 0; i < ALL_PROPS.length; i++) {
	        var propKey = ALL_PROPS[i]
	        this[propKey] = ev[propKey]
	    }

	    for (var j = 0; j < MOUSE_PROPS.length; j++) {
	        var mousePropKey = MOUSE_PROPS[j]
	        this[mousePropKey] = ev[mousePropKey]
	    }

	    this._rawEvent = ev
	}

	inherits(MouseEvent, ProxyEvent)

	function KeyEvent(ev) {
	    for (var i = 0; i < ALL_PROPS.length; i++) {
	        var propKey = ALL_PROPS[i]
	        this[propKey] = ev[propKey]
	    }

	    for (var j = 0; j < KEY_PROPS.length; j++) {
	        var keyPropKey = KEY_PROPS[j]
	        this[keyPropKey] = ev[keyPropKey]
	    }

	    this._rawEvent = ev
	}

	inherits(KeyEvent, ProxyEvent)


/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	var createStore = __webpack_require__(44)
	var Individual = __webpack_require__(43)

	var createHash = __webpack_require__(36)

	var hashStore = Individual("__DATA_SET_WEAKMAP@3", createStore())

	module.exports = DataSet

	function DataSet(elem) {
	    var store = hashStore(elem)

	    if (!store.hash) {
	        store.hash = createHash(elem)
	    }

	    return store.hash
	}


/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var topLevel = typeof global !== 'undefined' ? global :
	    typeof window !== 'undefined' ? window : {}
	var minDoc = __webpack_require__(32);

	if (typeof document !== 'undefined') {
	    module.exports = document;
	} else {
	    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }

	    module.exports = doccy;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(10)

	VirtualPatch.NONE = 0
	VirtualPatch.VTEXT = 1
	VirtualPatch.VNODE = 2
	VirtualPatch.WIDGET = 3
	VirtualPatch.PROPS = 4
	VirtualPatch.ORDER = 5
	VirtualPatch.INSERT = 6
	VirtualPatch.REMOVE = 7
	VirtualPatch.THUNK = 8

	module.exports = VirtualPatch

	function VirtualPatch(type, vNode, patch) {
	    this.type = Number(type)
	    this.vNode = vNode
	    this.patch = patch
	}

	VirtualPatch.prototype.version = version
	VirtualPatch.prototype.type = "VirtualPatch"


/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	var version = __webpack_require__(10)

	module.exports = isVirtualText

	function isVirtualText(x) {
	    return x && x.type === "VirtualText" && x.version === version
	}


/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	var isVNode = __webpack_require__(11)
	var isVText = __webpack_require__(25)
	var isWidget = __webpack_require__(12)
	var isThunk = __webpack_require__(13)

	module.exports = handleThunk

	function handleThunk(a, b) {
	    var renderedA = a
	    var renderedB = b

	    if (isThunk(b)) {
	        renderedB = renderThunk(b, a)
	    }

	    if (isThunk(a)) {
	        renderedA = renderThunk(a, null)
	    }

	    return {
	        a: renderedA,
	        b: renderedB
	    }
	}

	function renderThunk(thunk, previous) {
	    var renderedThunk = thunk.vnode

	    if (!renderedThunk) {
	        renderedThunk = thunk.vnode = thunk.render(previous)
	    }

	    if (!(isVNode(renderedThunk) ||
	            isVText(renderedThunk) ||
	            isWidget(renderedThunk))) {
	        throw new Error("thunk did not return a valid node");
	    }

	    return renderedThunk
	}


/***/ },
/* 27 */
/***/ function(module, exports, __webpack_require__) {

	// Maps a virtual DOM tree onto a real DOM tree in an efficient manner.
	// We don't want to read all of the DOM nodes in the tree so we use
	// the in-order tree indexing to eliminate recursion down certain branches.
	// We only recurse into a DOM node if we know that it contains a child of
	// interest.

	var noChild = {}

	module.exports = domIndex

	function domIndex(rootNode, tree, indices, nodes) {
	    if (!indices || indices.length === 0) {
	        return {}
	    } else {
	        indices.sort(ascending)
	        return recurse(rootNode, tree, indices, nodes, 0)
	    }
	}

	function recurse(rootNode, tree, indices, nodes, rootIndex) {
	    nodes = nodes || {}


	    if (rootNode) {
	        if (indexInRange(indices, rootIndex, rootIndex)) {
	            nodes[rootIndex] = rootNode
	        }

	        var vChildren = tree.children

	        if (vChildren) {

	            var childNodes = rootNode.childNodes

	            for (var i = 0; i < tree.children.length; i++) {
	                rootIndex += 1

	                var vChild = vChildren[i] || noChild
	                var nextIndex = rootIndex + (vChild.count || 0)

	                // skip recursion down the tree if there are no nodes down here
	                if (indexInRange(indices, rootIndex, nextIndex)) {
	                    recurse(childNodes[i], vChild, indices, nodes, rootIndex)
	                }

	                rootIndex = nextIndex
	            }
	        }
	    }

	    return nodes
	}

	// Binary search for an index in the interval [left, right]
	function indexInRange(indices, left, right) {
	    if (indices.length === 0) {
	        return false
	    }

	    var minIndex = 0
	    var maxIndex = indices.length - 1
	    var currentIndex
	    var currentItem

	    while (minIndex <= maxIndex) {
	        currentIndex = ((maxIndex + minIndex) / 2) >> 0
	        currentItem = indices[currentIndex]

	        if (minIndex === maxIndex) {
	            return currentItem >= left && currentItem <= right
	        } else if (currentItem < left) {
	            minIndex = currentIndex + 1
	        } else  if (currentItem > right) {
	            maxIndex = currentIndex - 1
	        } else {
	            return true
	        }
	    }

	    return false;
	}

	function ascending(a, b) {
	    return a > b ? 1 : -1
	}


/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	var applyProperties = __webpack_require__(29)

	var isWidget = __webpack_require__(12)
	var VPatch = __webpack_require__(24)

	var render = __webpack_require__(17)
	var updateWidget = __webpack_require__(38)

	module.exports = applyPatch

	function applyPatch(vpatch, domNode, renderOptions) {
	    var type = vpatch.type
	    var vNode = vpatch.vNode
	    var patch = vpatch.patch

	    switch (type) {
	        case VPatch.REMOVE:
	            return removeNode(domNode, vNode)
	        case VPatch.INSERT:
	            return insertNode(domNode, patch, renderOptions)
	        case VPatch.VTEXT:
	            return stringPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.WIDGET:
	            return widgetPatch(domNode, vNode, patch, renderOptions)
	        case VPatch.VNODE:
	            return vNodePatch(domNode, vNode, patch, renderOptions)
	        case VPatch.ORDER:
	            reorderChildren(domNode, patch)
	            return domNode
	        case VPatch.PROPS:
	            applyProperties(domNode, patch, vNode.properties)
	            return domNode
	        case VPatch.THUNK:
	            return replaceRoot(domNode,
	                renderOptions.patch(domNode, patch, renderOptions))
	        default:
	            return domNode
	    }
	}

	function removeNode(domNode, vNode) {
	    var parentNode = domNode.parentNode

	    if (parentNode) {
	        parentNode.removeChild(domNode)
	    }

	    destroyWidget(domNode, vNode);

	    return null
	}

	function insertNode(parentNode, vNode, renderOptions) {
	    var newNode = render(vNode, renderOptions)

	    if (parentNode) {
	        parentNode.appendChild(newNode)
	    }

	    return parentNode
	}

	function stringPatch(domNode, leftVNode, vText, renderOptions) {
	    var newNode

	    if (domNode.nodeType === 3) {
	        domNode.replaceData(0, domNode.length, vText.text)
	        newNode = domNode
	    } else {
	        var parentNode = domNode.parentNode
	        newNode = render(vText, renderOptions)

	        if (parentNode) {
	            parentNode.replaceChild(newNode, domNode)
	        }
	    }

	    return newNode
	}

	function widgetPatch(domNode, leftVNode, widget, renderOptions) {
	    var updating = updateWidget(leftVNode, widget)
	    var newNode

	    if (updating) {
	        newNode = widget.update(leftVNode, domNode) || domNode
	    } else {
	        newNode = render(widget, renderOptions)
	    }

	    var parentNode = domNode.parentNode

	    if (parentNode && newNode !== domNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }

	    if (!updating) {
	        destroyWidget(domNode, leftVNode)
	    }

	    return newNode
	}

	function vNodePatch(domNode, leftVNode, vNode, renderOptions) {
	    var parentNode = domNode.parentNode
	    var newNode = render(vNode, renderOptions)

	    if (parentNode) {
	        parentNode.replaceChild(newNode, domNode)
	    }

	    return newNode
	}

	function destroyWidget(domNode, w) {
	    if (typeof w.destroy === "function" && isWidget(w)) {
	        w.destroy(domNode)
	    }
	}

	function reorderChildren(domNode, bIndex) {
	    var children = []
	    var childNodes = domNode.childNodes
	    var len = childNodes.length
	    var i
	    var reverseIndex = bIndex.reverse

	    for (i = 0; i < len; i++) {
	        children.push(domNode.childNodes[i])
	    }

	    var insertOffset = 0
	    var move
	    var node
	    var insertNode
	    for (i = 0; i < len; i++) {
	        move = bIndex[i]
	        if (move !== undefined && move !== i) {
	            // the element currently at this index will be moved later so increase the insert offset
	            if (reverseIndex[i] > i) {
	                insertOffset++
	            }

	            node = children[move]
	            insertNode = childNodes[i + insertOffset] || null
	            if (node !== insertNode) {
	                domNode.insertBefore(node, insertNode)
	            }

	            // the moved element came from the front of the array so reduce the insert offset
	            if (move < i) {
	                insertOffset--
	            }
	        }

	        // element at this index is scheduled to be removed so increase insert offset
	        if (i in bIndex.removes) {
	            insertOffset++
	        }
	    }
	}

	function replaceRoot(oldRoot, newRoot) {
	    if (oldRoot && newRoot && oldRoot !== newRoot && oldRoot.parentNode) {
	        console.log(oldRoot)
	        oldRoot.parentNode.replaceChild(newRoot, oldRoot)
	    }

	    return newRoot;
	}


/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	var isObject = __webpack_require__(35)
	var isHook = __webpack_require__(14)

	module.exports = applyProperties

	function applyProperties(node, props, previous) {
	    for (var propName in props) {
	        var propValue = props[propName]

	        if (propValue === undefined) {
	            removeProperty(node, props, previous, propName);
	        } else if (isHook(propValue)) {
	            propValue.hook(node,
	                propName,
	                previous ? previous[propName] : undefined)
	        } else {
	            if (isObject(propValue)) {
	                patchObject(node, props, previous, propName, propValue);
	            } else if (propValue !== undefined) {
	                node[propName] = propValue
	            }
	        }
	    }
	}

	function removeProperty(node, props, previous, propName) {
	    if (previous) {
	        var previousValue = previous[propName]

	        if (!isHook(previousValue)) {
	            if (propName === "attributes") {
	                for (var attrName in previousValue) {
	                    node.removeAttribute(attrName)
	                }
	            } else if (propName === "style") {
	                for (var i in previousValue) {
	                    node.style[i] = ""
	                }
	            } else if (typeof previousValue === "string") {
	                node[propName] = ""
	            } else {
	                node[propName] = null
	            }
	        } else if (previousValue.unhook) {
	            previousValue.unhook(node, propName)
	        }
	    }
	}

	function patchObject(node, props, previous, propName, propValue) {
	    var previousValue = previous ? previous[propName] : undefined

	    // Set attributes
	    if (propName === "attributes") {
	        for (var attrName in propValue) {
	            var attrValue = propValue[attrName]

	            if (attrValue === undefined) {
	                node.removeAttribute(attrName)
	            } else {
	                node.setAttribute(attrName, attrValue)
	            }
	        }

	        return
	    }

	    if(previousValue && isObject(previousValue) &&
	        getPrototype(previousValue) !== getPrototype(propValue)) {
	        node[propName] = propValue
	        return
	    }

	    if (!isObject(node[propName])) {
	        node[propName] = {}
	    }

	    var replacer = propName === "style" ? "" : undefined

	    for (var k in propValue) {
	        var value = propValue[k]
	        node[propName][k] = (value === undefined) ? replacer : value
	    }
	}

	function getPrototype(value) {
	    if (Object.getPrototypeOf) {
	        return Object.getPrototypeOf(value)
	    } else if (value.__proto__) {
	        return value.__proto__
	    } else if (value.constructor) {
	        return value.constructor.prototype
	    }
	}


/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	/**
	 * cuid.js
	 * Collision-resistant UID generator for browsers and node.
	 * Sequential for fast db lookups and recency sorting.
	 * Safe for element IDs and server-side lookups.
	 *
	 * Extracted from CLCTR
	 * 
	 * Copyright (c) Eric Elliott 2012
	 * MIT License
	 */

	/*global window, navigator, document, require, process, module */
	(function (app) {
	  'use strict';
	  var namespace = 'cuid',
	    c = 0,
	    blockSize = 4,
	    base = 36,
	    discreteValues = Math.pow(base, blockSize),

	    pad = function pad(num, size) {
	      var s = "000000000" + num;
	      return s.substr(s.length-size);
	    },

	    randomBlock = function randomBlock() {
	      return pad((Math.random() *
	            discreteValues << 0)
	            .toString(base), blockSize);
	    },

	    safeCounter = function () {
	      c = (c < discreteValues) ? c : 0;
	      c++; // this is not subliminal
	      return c - 1;
	    },

	    api = function cuid() {
	      // Starting with a lowercase letter makes
	      // it HTML element ID friendly.
	      var letter = 'c', // hard-coded allows for sequential access

	        // timestamp
	        // warning: this exposes the exact date and time
	        // that the uid was created.
	        timestamp = (new Date().getTime()).toString(base),

	        // Prevent same-machine collisions.
	        counter,

	        // A few chars to generate distinct ids for different
	        // clients (so different computers are far less
	        // likely to generate the same id)
	        fingerprint = api.fingerprint(),

	        // Grab some more chars from Math.random()
	        random = randomBlock() + randomBlock();

	        counter = pad(safeCounter().toString(base), blockSize);

	      return  (letter + timestamp + counter + fingerprint + random);
	    };

	  api.slug = function slug() {
	    var date = new Date().getTime().toString(36),
	      counter,
	      print = api.fingerprint().slice(0,1) +
	        api.fingerprint().slice(-1),
	      random = randomBlock().slice(-2);

	      counter = safeCounter().toString(36).slice(-4);

	    return date.slice(-2) + 
	      counter + print + random;
	  };

	  api.globalCount = function globalCount() {
	    // We want to cache the results of this
	    var cache = (function calc() {
	        var i,
	          count = 0;

	        for (i in window) {
	          count++;
	        }

	        return count;
	      }());

	    api.globalCount = function () { return cache; };
	    return cache;
	  };

	  api.fingerprint = function browserPrint() {
	    return pad((navigator.mimeTypes.length +
	      navigator.userAgent.length).toString(36) +
	      api.globalCount().toString(36), 4);
	  };

	  // don't change anything from here down.
	  if (app.register) {
	    app.register(namespace, api);
	  } else if (true) {
	    module.exports = api;
	  } else {
	    app[namespace] = api;
	  }

	}(this.applitude || this));


/***/ },
/* 31 */
/***/ function(module, exports, __webpack_require__) {

	var createStore = __webpack_require__(45)
	var Individual = __webpack_require__(18)

	var createHash = __webpack_require__(39)

	var hashStore = Individual("__DATA_SET_WEAKMAP@3", createStore())

	module.exports = DataSet

	function DataSet(elem) {
	    var store = hashStore(elem)

	    if (!store.hash) {
	        store.hash = createHash(elem)
	    }

	    return store.hash
	}


/***/ },
/* 32 */
/***/ function(module, exports, __webpack_require__) {

	/* (ignored) */

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	var hiddenStore = __webpack_require__(40);

	module.exports = createStore;

	function createStore() {
	    var key = {};

	    return function (obj) {
	        if ((typeof obj !== 'object' || obj === null) &&
	            typeof obj !== 'function'
	        ) {
	            throw new Error('Weakmap-shim: Key must be object')
	        }

	        var store = obj.valueOf(key);
	        return store && store.identity === key ?
	            store : hiddenStore(obj, key);
	    };
	}


/***/ },
/* 34 */
/***/ function(module, exports, __webpack_require__) {

	var nativeIsArray = Array.isArray
	var toString = Object.prototype.toString

	module.exports = nativeIsArray || isArray

	function isArray(obj) {
	    return toString.call(obj) === "[object Array]"
	}


/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";

	module.exports = function isObject(x) {
		return typeof x === "object" && x !== null;
	};


/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = createHash

	function createHash(elem) {
	    var attributes = elem.attributes
	    var hash = {}

	    if (attributes === null || attributes === undefined) {
	        return hash
	    }

	    for (var i = 0; i < attributes.length; i++) {
	        var attr = attributes[i]

	        if (attr.name.substr(0,5) !== "data-") {
	            continue
	        }

	        hash[attr.name.substr(5)] = attr.value
	    }

	    return hash
	}


/***/ },
/* 37 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var topLevel = typeof global !== 'undefined' ? global :
	    typeof window !== 'undefined' ? window : {}
	var minDoc = __webpack_require__(42);

	if (typeof document !== 'undefined') {
	    module.exports = document;
	} else {
	    var doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];

	    if (!doccy) {
	        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;
	    }

	    module.exports = doccy;
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	var isWidget = __webpack_require__(12)

	module.exports = updateWidget

	function updateWidget(a, b) {
	    if (isWidget(a) && isWidget(b)) {
	        if ("name" in a && "name" in b) {
	            return a.id === b.id
	        } else {
	            return a.init === b.init
	        }
	    }

	    return false
	}


/***/ },
/* 39 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = createHash

	function createHash(elem) {
	    var attributes = elem.attributes
	    var hash = {}

	    if (attributes === null || attributes === undefined) {
	        return hash
	    }

	    for (var i = 0; i < attributes.length; i++) {
	        var attr = attributes[i]

	        if (attr.name.substr(0,5) !== "data-") {
	            continue
	        }

	        hash[attr.name.substr(5)] = attr.value
	    }

	    return hash
	}


/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = hiddenStore;

	function hiddenStore(obj, key) {
	    var store = { identity: key };
	    var valueOf = obj.valueOf;

	    Object.defineProperty(obj, "valueOf", {
	        value: function (value) {
	            return value !== key ?
	                valueOf.apply(this, arguments) : store;
	        },
	        writable: true
	    });

	    return store;
	}


/***/ },
/* 41 */
/***/ function(module, exports, __webpack_require__) {

	if (typeof Object.create === 'function') {
	  // implementation from standard node.js 'util' module
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    ctor.prototype = Object.create(superCtor.prototype, {
	      constructor: {
	        value: ctor,
	        enumerable: false,
	        writable: true,
	        configurable: true
	      }
	    });
	  };
	} else {
	  // old school shim for old browsers
	  module.exports = function inherits(ctor, superCtor) {
	    ctor.super_ = superCtor
	    var TempCtor = function () {}
	    TempCtor.prototype = superCtor.prototype
	    ctor.prototype = new TempCtor()
	    ctor.prototype.constructor = ctor
	  }
	}


/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	/* (ignored) */

/***/ },
/* 43 */
/***/ function(module, exports, __webpack_require__) {

	/* WEBPACK VAR INJECTION */(function(global) {var root = typeof window !== 'undefined' ?
	    window : typeof global !== 'undefined' ?
	    global : {};

	module.exports = Individual

	function Individual(key, value) {
	    if (root[key]) {
	        return root[key]
	    }

	    Object.defineProperty(root, key, {
	        value: value
	        , configurable: true
	    })

	    return value
	}
	
	/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	var hiddenStore = __webpack_require__(46);

	module.exports = createStore;

	function createStore() {
	    var key = {};

	    return function (obj) {
	        if (typeof obj !== 'object' || obj === null) {
	            throw new Error('Weakmap-shim: Key must be object')
	        }

	        var store = obj.valueOf(key);
	        return store && store.identity === key ?
	            store : hiddenStore(obj, key);
	    };
	}


/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	var hiddenStore = __webpack_require__(47);

	module.exports = createStore;

	function createStore() {
	    var key = {};

	    return function (obj) {
	        if (typeof obj !== 'object' || obj === null) {
	            throw new Error('Weakmap-shim: Key must be object')
	        }

	        var store = obj.valueOf(key);
	        return store && store.identity === key ?
	            store : hiddenStore(obj, key);
	    };
	}


/***/ },
/* 46 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = hiddenStore;

	function hiddenStore(obj, key) {
	    var store = { identity: key };
	    var valueOf = obj.valueOf;

	    Object.defineProperty(obj, "valueOf", {
	        value: function (value) {
	            return value !== key ?
	                valueOf.apply(this, arguments) : store;
	        },
	        writable: true
	    });

	    return store;
	}


/***/ },
/* 47 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = hiddenStore;

	function hiddenStore(obj, key) {
	    var store = { identity: key };
	    var valueOf = obj.valueOf;

	    Object.defineProperty(obj, "valueOf", {
	        value: function (value) {
	            return value !== key ?
	                valueOf.apply(this, arguments) : store;
	        },
	        writable: true
	    });

	    return store;
	}


/***/ }
/******/ ]);
module.exports = {
    virtualDOM: virtualDOM
};

},{"Prelude":25}],23:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Data_Function = require("Data.Function");
var Html_Attributes_Internal = require("Html.Attributes.Internal");
var Html_VirtualDOM = require("Html.VirtualDOM");
var Prelude = require("Prelude");
var Control_Monad_Eff_Ref = require("Control.Monad.Eff.Ref");
var Control_Monad_Eff = require("Control.Monad.Eff");
function Html(value0) {
    this.value0 = value0;
};
Html.create = function (value0) {
    return new Html(value0);
};

    function vnodeImpl (fn, name, attrs, children) {
      var props     = {}
        , key       = undefined
        , namespace = undefined;

      for(var i = 0; i < attrs.length; i++) {
        var attr = attrs[i];
        var typ  = fn.attrType(attr);
        if(typ === "a") {
          props[fn.attrKey(attr)] = fn.attrVal(attr);
        } else if (typ === "k") {
          key = fn.getKey(attr);
        } else {
          namespace = fn.getNs(attr);
        }
      }
      return new fn.vnode(name, props, children, key, namespace);
    }
    ;

    function vtextImpl(vtext, text){
      return new vtext(text);
    };

    function appendBodyImpl(node){
      return function(){
        document.body.appendChild(node);
      }
    };

    function appendSelectorImpl(sel, node) {
      return function(){
        var elm = document.querySelector(sel);
        if(elm) { elm.appendChild(node) }
      }
    };

    function onDOMContentLoaded(f){
      return function(){
        document.addEventListener("DOMContentLoaded", f);
      }
    };
var vnode = Data_Function.runFn4(vnodeImpl)({
    attrType: Html_Attributes_Internal.attrType, 
    attrKey: Html_Attributes_Internal.getAttrKey, 
    attrVal: Html_Attributes_Internal.getAttrValue, 
    getKey: Html_Attributes_Internal.getKeyString, 
    getNs: Html_Attributes_Internal.getNamespaceString, 
    vnode: Html_VirtualDOM.virtualDOM.vnode
});
var text = Data_Function.runFn2(vtextImpl)(Html_VirtualDOM.virtualDOM.vtext);
var patch = function (_9) {
    return function (_10) {
        return function __do() {
            var _4 = Control_Monad_Eff_Ref.readRef(_10.value0)();
            return (function () {
                var patch_1 = Html_VirtualDOM.virtualDOM.diff(_4.vtree, _9);
                var node$prime = Html_VirtualDOM.virtualDOM.patch(_4.node, patch_1);
                return Control_Monad_Eff_Ref.writeRef(_10.value0)({
                    node: node$prime, 
                    vtree: _9
                });
            })()();
        };
    };
};
var createElementOptions = function (opts) {
    return function (vtree) {
        var n = Html_VirtualDOM.virtualDOM.create(vtree, opts);
        return function __do() {
            var _0 = Control_Monad_Eff_Ref.newRef({
                node: n, 
                vtree: vtree
            })();
            return new Html(_0);
        };
    };
};
var createElement = function (vtree) {
    var n = Html_VirtualDOM.virtualDOM.create(vtree);
    return function __do() {
        var _1 = Control_Monad_Eff_Ref.newRef({
            node: n, 
            vtree: vtree
        })();
        return new Html(_1);
    };
};
var appendSelector = function (_7) {
    return function (_8) {
        return function __do() {
            var _3 = Control_Monad_Eff_Ref.readRef(_8.value0)();
            return appendSelectorImpl(_7, _3.node)();
        };
    };
};
var appendBody = function (_6) {
    return function __do() {
        var _2 = Control_Monad_Eff_Ref.readRef(_6.value0)();
        return appendBodyImpl(_2.node)();
    };
};
module.exports = {
    appendBody: appendBody, 
    appendSelector: appendSelector, 
    createElement: createElement, 
    createElementOptions: createElementOptions, 
    onDOMContentLoaded: onDOMContentLoaded, 
    patch: patch, 
    text: text, 
    vnode: vnode
};

},{"Control.Monad.Eff":6,"Control.Monad.Eff.Ref":5,"Data.Function":11,"Html.Attributes.Internal":17,"Html.VirtualDOM":22,"Prelude":25}],24:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Html = require("Html");
var Html_Attributes_Html5 = require("Html.Attributes.Html5");
var Html_Attributes = require("Html.Attributes");
var Html_Events_Heavy = require("Html.Events.Heavy");
var Debug_Trace = require("Debug.Trace");
var Prelude = require("Prelude");
var Control_Timer = require("Control.Timer");
var Html_Events = require("Html.Events");
var Control_Monad_Eff = require("Control.Monad.Eff");
var test2 = Html.vnode("div")([ Html_Events_Heavy.onMouseMove(Debug_Trace.print(Html_Events.showMouseHoverEvent)) ])([ Html.text("inu"), Html.vnode("span")([ Html_Attributes.style({
    color: "red"
}) ])([ Html.text("bowow") ]), Html.vnode("input")([  ])([  ]) ]);
var test1 = function (color) {
    return Html.vnode("div")([ Html_Attributes_Html5.class_("neko"), Html_Attributes_Html5.title("title"), Html_Attributes_Html5.id_("idnt"), Html_Attributes.style({
        color: color
    }) ])([ Html.text("neko") ]);
};
var main = Html.onDOMContentLoaded(function __do() {
    Html_Events_Heavy.listenMouseMove();
    var _5 = Html.createElement(test1("blue"))();
    Html.appendSelector("div")(_5)();
    Control_Timer.timeout(100)(function __do() {
        Html.patch(test1("red"))(_5)();
        return Control_Timer.timeout(100)(Html.patch(test2)(_5))();
    })();
    return Prelude.unit;
});
module.exports = {
    main: main, 
    test1: test1, 
    test2: test2
};

},{"Control.Monad.Eff":6,"Control.Timer":9,"Debug.Trace":15,"Html":23,"Html.Attributes":18,"Html.Attributes.Html5":16,"Html.Events":21,"Html.Events.Heavy":19,"Prelude":25}],25:[function(require,module,exports){
// Generated by psc-make version 0.6.2
"use strict";
var Unit = {
    create: function (value) {
        return value;
    }
};
function LT() {

};
LT.value = new LT();
function GT() {

};
GT.value = new GT();
function EQ() {

};
EQ.value = new EQ();
function Semigroupoid($less$less$less) {
    this["<<<"] = $less$less$less;
};
function Category(__superclass_Prelude$dotSemigroupoid_0, id) {
    this["__superclass_Prelude.Semigroupoid_0"] = __superclass_Prelude$dotSemigroupoid_0;
    this.id = id;
};
function Show(show) {
    this.show = show;
};
function Functor($less$dollar$greater) {
    this["<$>"] = $less$dollar$greater;
};
function Apply($less$times$greater, __superclass_Prelude$dotFunctor_0) {
    this["<*>"] = $less$times$greater;
    this["__superclass_Prelude.Functor_0"] = __superclass_Prelude$dotFunctor_0;
};
function Applicative(__superclass_Prelude$dotApply_0, pure) {
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
    this.pure = pure;
};
function Bind($greater$greater$eq, __superclass_Prelude$dotApply_0) {
    this[">>="] = $greater$greater$eq;
    this["__superclass_Prelude.Apply_0"] = __superclass_Prelude$dotApply_0;
};
function Monad(__superclass_Prelude$dotApplicative_0, __superclass_Prelude$dotBind_1) {
    this["__superclass_Prelude.Applicative_0"] = __superclass_Prelude$dotApplicative_0;
    this["__superclass_Prelude.Bind_1"] = __superclass_Prelude$dotBind_1;
};
function Num($percent, $times, $plus, $minus, $div, negate) {
    this["%"] = $percent;
    this["*"] = $times;
    this["+"] = $plus;
    this["-"] = $minus;
    this["/"] = $div;
    this.negate = negate;
};
function Eq($div$eq, $eq$eq) {
    this["/="] = $div$eq;
    this["=="] = $eq$eq;
};
function Ord(__superclass_Prelude$dotEq_0, compare) {
    this["__superclass_Prelude.Eq_0"] = __superclass_Prelude$dotEq_0;
    this.compare = compare;
};
function Bits($dot$amp$dot, $dot$up$dot, $dot$bar$dot, complement, shl, shr, zshr) {
    this[".&."] = $dot$amp$dot;
    this[".^."] = $dot$up$dot;
    this[".|."] = $dot$bar$dot;
    this.complement = complement;
    this.shl = shl;
    this.shr = shr;
    this.zshr = zshr;
};
function BoolLike($amp$amp, not, $bar$bar) {
    this["&&"] = $amp$amp;
    this.not = not;
    this["||"] = $bar$bar;
};
function Semigroup($less$greater) {
    this["<>"] = $less$greater;
};
function cons(e) {  return function(l) {    return [e].concat(l);  };};
function showStringImpl(s) {  return JSON.stringify(s);};
function showNumberImpl(n) {  return n.toString();};
function showArrayImpl(f) {  return function(xs) {    var ss = [];    for (var i = 0, l = xs.length; i < l; i++) {      ss[i] = f(xs[i]);    }    return '[' + ss.join(',') + ']';  };};
function numAdd(n1) {  return function(n2) {    return n1 + n2;  };};
function numSub(n1) {  return function(n2) {    return n1 - n2;  };};
function numMul(n1) {  return function(n2) {    return n1 * n2;  };};
function numDiv(n1) {  return function(n2) {    return n1 / n2;  };};
function numMod(n1) {  return function(n2) {    return n1 % n2;  };};
function numNegate(n) {  return -n;};
function refEq(r1) {  return function(r2) {    return r1 === r2;  };};
function refIneq(r1) {  return function(r2) {    return r1 !== r2;  };};
function eqArrayImpl(f) {  return function(xs) {    return function(ys) {      if (xs.length !== ys.length) return false;      for (var i = 0; i < xs.length; i++) {        if (!f(xs[i])(ys[i])) return false;      }      return true;    };  };};
function unsafeCompareImpl(lt) {  return function(eq) {    return function(gt) {      return function(x) {        return function(y) {          return x < y ? lt : x > y ? gt : eq;        };      };    };  };};
function numShl(n1) {  return function(n2) {    return n1 << n2;  };};
function numShr(n1) {  return function(n2) {    return n1 >> n2;  };};
function numZshr(n1) {  return function(n2) {    return n1 >>> n2;  };};
function numAnd(n1) {  return function(n2) {    return n1 & n2;  };};
function numOr(n1) {  return function(n2) {    return n1 | n2;  };};
function numXor(n1) {  return function(n2) {    return n1 ^ n2;  };};
function numComplement(n) {  return ~n;};
function boolAnd(b1) {  return function(b2) {    return b1 && b2;  };};
function boolOr(b1) {  return function(b2) {    return b1 || b2;  };};
function boolNot(b) {  return !b;};
function concatString(s1) {  return function(s2) {    return s1 + s2;  };};
var $bar$bar = function (dict) {
    return dict["||"];
};
var $greater$greater$eq = function (dict) {
    return dict[">>="];
};
var $eq$eq = function (dict) {
    return dict["=="];
};
var $less$greater = function (dict) {
    return dict["<>"];
};
var $less$less$less = function (dict) {
    return dict["<<<"];
};
var $greater$greater$greater = function (__dict_Semigroupoid_0) {
    return function (f) {
        return function (g) {
            return $less$less$less(__dict_Semigroupoid_0)(g)(f);
        };
    };
};
var $less$times$greater = function (dict) {
    return dict["<*>"];
};
var $less$dollar$greater = function (dict) {
    return dict["<$>"];
};
var $less$hash$greater = function (__dict_Functor_1) {
    return function (fa) {
        return function (f) {
            return $less$dollar$greater(__dict_Functor_1)(f)(fa);
        };
    };
};
var $colon = cons;
var $div$eq = function (dict) {
    return dict["/="];
};
var $div = function (dict) {
    return dict["/"];
};
var $dot$bar$dot = function (dict) {
    return dict[".|."];
};
var $dot$up$dot = function (dict) {
    return dict[".^."];
};
var $dot$amp$dot = function (dict) {
    return dict[".&."];
};
var $minus = function (dict) {
    return dict["-"];
};
var $plus$plus = function (__dict_Semigroup_2) {
    return $less$greater(__dict_Semigroup_2);
};
var $plus = function (dict) {
    return dict["+"];
};
var $times = function (dict) {
    return dict["*"];
};
var $amp$amp = function (dict) {
    return dict["&&"];
};
var $percent = function (dict) {
    return dict["%"];
};
var $dollar = function (f) {
    return function (x) {
        return f(x);
    };
};
var $hash = function (x) {
    return function (f) {
        return f(x);
    };
};
var zshr = function (dict) {
    return dict.zshr;
};
var unsafeCompare = unsafeCompareImpl(LT.value)(EQ.value)(GT.value);
var unit = {};
var shr = function (dict) {
    return dict.shr;
};
var showUnit = new Show(function (_11) {
    return "Unit {}";
});
var showString = new Show(showStringImpl);
var showOrdering = new Show(function (_19) {
    if (_19 instanceof LT) {
        return "LT";
    };
    if (_19 instanceof GT) {
        return "GT";
    };
    if (_19 instanceof EQ) {
        return "EQ";
    };
    throw new Error("Failed pattern match");
});
var showNumber = new Show(showNumberImpl);
var showBoolean = new Show(function (_12) {
    if (_12) {
        return "true";
    };
    if (!_12) {
        return "false";
    };
    throw new Error("Failed pattern match");
});
var show = function (dict) {
    return dict.show;
};
var showArray = function (__dict_Show_3) {
    return new Show(showArrayImpl(show(__dict_Show_3)));
};
var shl = function (dict) {
    return dict.shl;
};
var semigroupoidArr = new Semigroupoid(function (f) {
    return function (g) {
        return function (x) {
            return f(g(x));
        };
    };
});
var semigroupUnit = new Semigroup(function (_26) {
    return function (_27) {
        return {};
    };
});
var semigroupString = new Semigroup(concatString);
var semigroupArr = function (__dict_Semigroup_4) {
    return new Semigroup(function (f) {
        return function (g) {
            return function (x) {
                return $less$greater(__dict_Semigroup_4)(f(x))(g(x));
            };
        };
    });
};
var pure = function (dict) {
    return dict.pure;
};
var $$return = function (__dict_Monad_5) {
    return pure(__dict_Monad_5["__superclass_Prelude.Applicative_0"]());
};
var otherwise = true;
var numNumber = new Num(numMod, numMul, numAdd, numSub, numDiv, numNegate);
var not = function (dict) {
    return dict.not;
};
var negate = function (dict) {
    return dict.negate;
};
var liftM1 = function (__dict_Monad_6) {
    return function (f) {
        return function (a) {
            return $greater$greater$eq(__dict_Monad_6["__superclass_Prelude.Bind_1"]())(a)(function (_0) {
                return $$return(__dict_Monad_6)(f(_0));
            });
        };
    };
};
var liftA1 = function (__dict_Applicative_7) {
    return function (f) {
        return function (a) {
            return $less$times$greater(__dict_Applicative_7["__superclass_Prelude.Apply_0"]())(pure(__dict_Applicative_7)(f))(a);
        };
    };
};
var id = function (dict) {
    return dict.id;
};
var functorArr = new Functor($less$less$less(semigroupoidArr));
var flip = function (f) {
    return function (b) {
        return function (a) {
            return f(a)(b);
        };
    };
};
var eqUnit = new Eq(function (_15) {
    return function (_16) {
        return false;
    };
}, function (_13) {
    return function (_14) {
        return true;
    };
});
var ordUnit = new Ord(function () {
    return eqUnit;
}, function (_20) {
    return function (_21) {
        return EQ.value;
    };
});
var eqString = new Eq(refIneq, refEq);
var ordString = new Ord(function () {
    return eqString;
}, unsafeCompare);
var eqNumber = new Eq(refIneq, refEq);
var ordNumber = new Ord(function () {
    return eqNumber;
}, unsafeCompare);
var eqBoolean = new Eq(refIneq, refEq);
var ordBoolean = new Ord(function () {
    return eqBoolean;
}, function (_22) {
    return function (_23) {
        if (!_22 && !_23) {
            return EQ.value;
        };
        if (!_22 && _23) {
            return LT.value;
        };
        if (_22 && _23) {
            return EQ.value;
        };
        if (_22 && !_23) {
            return GT.value;
        };
        throw new Error("Failed pattern match");
    };
});
var $$const = function (_7) {
    return function (_8) {
        return _7;
    };
};
var $$void = function (__dict_Functor_9) {
    return function (fa) {
        return $less$dollar$greater(__dict_Functor_9)($$const(unit))(fa);
    };
};
var complement = function (dict) {
    return dict.complement;
};
var compare = function (dict) {
    return dict.compare;
};
var $less = function (__dict_Ord_11) {
    return function (a1) {
        return function (a2) {
            var _57 = compare(__dict_Ord_11)(a1)(a2);
            if (_57 instanceof LT) {
                return true;
            };
            return false;
        };
    };
};
var $less$eq = function (__dict_Ord_12) {
    return function (a1) {
        return function (a2) {
            var _58 = compare(__dict_Ord_12)(a1)(a2);
            if (_58 instanceof GT) {
                return false;
            };
            return true;
        };
    };
};
var $greater = function (__dict_Ord_13) {
    return function (a1) {
        return function (a2) {
            var _59 = compare(__dict_Ord_13)(a1)(a2);
            if (_59 instanceof GT) {
                return true;
            };
            return false;
        };
    };
};
var $greater$eq = function (__dict_Ord_14) {
    return function (a1) {
        return function (a2) {
            var _60 = compare(__dict_Ord_14)(a1)(a2);
            if (_60 instanceof LT) {
                return false;
            };
            return true;
        };
    };
};
var categoryArr = new Category(function () {
    return semigroupoidArr;
}, function (x) {
    return x;
});
var boolLikeBoolean = new BoolLike(boolAnd, boolNot, boolOr);
var eqArray = function (__dict_Eq_8) {
    return new Eq(function (xs) {
        return function (ys) {
            return not(boolLikeBoolean)($eq$eq(eqArray(__dict_Eq_8))(xs)(ys));
        };
    }, function (xs) {
        return function (ys) {
            return eqArrayImpl($eq$eq(__dict_Eq_8))(xs)(ys);
        };
    });
};
var ordArray = function (__dict_Ord_10) {
    return new Ord(function () {
        return eqArray(__dict_Ord_10["__superclass_Prelude.Eq_0"]());
    }, function (_24) {
        return function (_25) {
            if (_24.length === 0 && _25.length === 0) {
                return EQ.value;
            };
            if (_24.length === 0) {
                return LT.value;
            };
            if (_25.length === 0) {
                return GT.value;
            };
            if (_24.length >= 1) {
                var _67 = _24.slice(1);
                if (_25.length >= 1) {
                    var _65 = _25.slice(1);
                    var _63 = compare(__dict_Ord_10)(_24[0])(_25[0]);
                    if (_63 instanceof EQ) {
                        return compare(ordArray(__dict_Ord_10))(_67)(_65);
                    };
                    return _63;
                };
            };
            throw new Error("Failed pattern match");
        };
    });
};
var eqOrdering = new Eq(function (x) {
    return function (y) {
        return not(boolLikeBoolean)($eq$eq(eqOrdering)(x)(y));
    };
}, function (_17) {
    return function (_18) {
        if (_17 instanceof LT && _18 instanceof LT) {
            return true;
        };
        if (_17 instanceof GT && _18 instanceof GT) {
            return true;
        };
        if (_17 instanceof EQ && _18 instanceof EQ) {
            return true;
        };
        return false;
    };
});
var bitsNumber = new Bits(numAnd, numXor, numOr, numComplement, numShl, numShr, numZshr);
var asTypeOf = function (_9) {
    return function (_10) {
        return _9;
    };
};
var applyArr = new Apply(function (f) {
    return function (g) {
        return function (x) {
            return f(x)(g(x));
        };
    };
}, function () {
    return functorArr;
});
var bindArr = new Bind(function (m) {
    return function (f) {
        return function (x) {
            return f(m(x))(x);
        };
    };
}, function () {
    return applyArr;
});
var applicativeArr = new Applicative(function () {
    return applyArr;
}, $$const);
var monadArr = new Monad(function () {
    return applicativeArr;
}, function () {
    return bindArr;
});
var ap = function (__dict_Monad_15) {
    return function (f) {
        return function (a) {
            return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(f)(function (_2) {
                return $greater$greater$eq(__dict_Monad_15["__superclass_Prelude.Bind_1"]())(a)(function (_1) {
                    return $$return(__dict_Monad_15)(_2(_1));
                });
            });
        };
    };
};
module.exports = {
    "#": $hash, 
    "$": $dollar, 
    "%": $percent, 
    "&&": $amp$amp, 
    "*": $times, 
    "+": $plus, 
    "++": $plus$plus, 
    "-": $minus, 
    ".&.": $dot$amp$dot, 
    ".^.": $dot$up$dot, 
    ".|.": $dot$bar$dot, 
    "/": $div, 
    "/=": $div$eq, 
    ":": $colon, 
    "<": $less, 
    "<#>": $less$hash$greater, 
    "<$>": $less$dollar$greater, 
    "<*>": $less$times$greater, 
    "<<<": $less$less$less, 
    "<=": $less$eq, 
    "<>": $less$greater, 
    "==": $eq$eq, 
    ">": $greater, 
    ">=": $greater$eq, 
    ">>=": $greater$greater$eq, 
    ">>>": $greater$greater$greater, 
    Applicative: Applicative, 
    Apply: Apply, 
    Bind: Bind, 
    Bits: Bits, 
    BoolLike: BoolLike, 
    Category: Category, 
    EQ: EQ, 
    Eq: Eq, 
    Functor: Functor, 
    GT: GT, 
    LT: LT, 
    Monad: Monad, 
    Num: Num, 
    Ord: Ord, 
    Semigroup: Semigroup, 
    Semigroupoid: Semigroupoid, 
    Show: Show, 
    Unit: Unit, 
    ap: ap, 
    applicativeArr: applicativeArr, 
    applyArr: applyArr, 
    asTypeOf: asTypeOf, 
    bindArr: bindArr, 
    bitsNumber: bitsNumber, 
    boolLikeBoolean: boolLikeBoolean, 
    categoryArr: categoryArr, 
    compare: compare, 
    complement: complement, 
    cons: cons, 
    "const": $$const, 
    eqArray: eqArray, 
    eqBoolean: eqBoolean, 
    eqNumber: eqNumber, 
    eqOrdering: eqOrdering, 
    eqString: eqString, 
    eqUnit: eqUnit, 
    flip: flip, 
    functorArr: functorArr, 
    id: id, 
    liftA1: liftA1, 
    liftM1: liftM1, 
    monadArr: monadArr, 
    negate: negate, 
    not: not, 
    numNumber: numNumber, 
    ordArray: ordArray, 
    ordBoolean: ordBoolean, 
    ordNumber: ordNumber, 
    ordString: ordString, 
    ordUnit: ordUnit, 
    otherwise: otherwise, 
    pure: pure, 
    refEq: refEq, 
    refIneq: refIneq, 
    "return": $$return, 
    semigroupArr: semigroupArr, 
    semigroupString: semigroupString, 
    semigroupUnit: semigroupUnit, 
    semigroupoidArr: semigroupoidArr, 
    shl: shl, 
    show: show, 
    showArray: showArray, 
    showBoolean: showBoolean, 
    showNumber: showNumber, 
    showOrdering: showOrdering, 
    showString: showString, 
    showUnit: showUnit, 
    shr: shr, 
    unit: unit, 
    "void": $$void, 
    zshr: zshr, 
    "||": $bar$bar
};

},{}],26:[function(require,module,exports){
require('Main').main();

},{"Main":24}]},{},[26]);
